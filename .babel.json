{
  "{\"filename\":\"/app/bot.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot.js",
      "filenameRelative": "/app/bot.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "bot.js",
      "sourceFileName": "bot.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "bot"
    },
    "ignored": false,
    "code": "//\n// This is main file containing code implementing the Express server and functionality for the Express echo bot.\n//\n'use strict';\n\nconst ObjectId = require('mongodb').ObjectID;\nconst schedule = require('node-schedule');\nconst watson = require('watson-developer-cloud');\nconst mongodb = require(\"mongodb\");\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst sRequest = require('sync-request');\nconst request = require('request');\nconst path = require('path');\nconst dbUtil = require('./dbUtil');\nvar http = require('https');\nvar fs = require('fs');\n\nvar messengerButton = \"<html><head><title>Facebook Messenger Bot</title></head><body><h1>Facebook Messenger Bot</h1>This is a bot based on Messenger Platform QuickStart. For more details, see their <a href=\\\"https://developers.facebook.com/docs/messenger-platform/guides/quick-start\\\">docs</a>.<footer id=\\\"gWidget\\\"></footer><script src=\\\"https://widget.glitch.me/widget.min.js\\\"></script></body></html>\";\n//User's data\nvar userName = \"test\";\n// Watson data\nvar conversation = watson.conversation({\n  username: 'a162acb8-d510-4c1e-8e81-aa514ee3b769',\n  password: 'kWC4xmdWiQ8Z',\n  version: 'v1',\n  version_date: '2017-02-03'\n});\nvar context = {};\n// The rest of the code implements the routes for our Express server.\nlet app = express();\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\n// database config\nvar MongoClient = mongodb.MongoClient;\nvar url1 = \"mongodb://tienanh2007:Dien1234@ds157040.mlab.com:57040/reminderbot\";\n// Webhook validation\napp.get('/webhook', function (req, res) {\n  if (req.query['hub.mode'] === 'subscribe' && req.query['hub.verify_token'] === process.env.VERIFY_TOKEN) {\n    console.log(\"Validating webhook\");\n    res.status(200).send(req.query['hub.challenge']);\n  } else {\n    console.error(\"Failed validation. Make sure the validation tokens match.\");\n    res.sendStatus(403);\n  }\n});\n\n// Display the web page\napp.get('/', function (req, res) {\n  res.writeHead(200, { 'Content-Type': 'text/html' });\n  res.write(messengerButton);\n  res.end();\n});\n\n// Message processing\napp.post('/webhook', function (req, res) {\n  var data = req.body;\n  if (data.object === 'page') {\n    // Iterate over each entry - there may be multiple if batched\n    data.entry.forEach(function (entry) {\n      var pageID = entry.id;\n      var timeOfEvent = entry.time;\n      // Iterate over each messaging event\n      entry.messaging.forEach(function (event) {\n        callUserProfileAPI(event.sender.id, function (body) {\n          var userData = { userid: event.sender.id, counter: 0, keywords: [], creating: false, reminder: {}, timezone: body.timezone };\n          getDB(\"User\", function (collection) {\n            if (!containsObject(event.sender.id, collection)) {\n              addDB(\"User\", userData, event.sender.id);\n            }\n            if (event.message) {\n              receivedMessage(event);\n            } else if (event.postback) {\n              receivedPostback(event);\n            } else {\n              console.log(\"Webhook received unknown event: \", event);\n            }\n          });\n        });\n      });\n    });\n\n    // Assume all went well.\n    //\n    // You must send back a 200, within 20 seconds, to let us know\n    // you've successfully received the callback. Otherwise, the request\n    // will time out and we will keep trying to resend.\n    res.sendStatus(200);\n  }\n});\n\n//Get the User Profile API\nfunction callUserProfileAPI(senderID, cb) {\n  request({\n    uri: 'https://graph.facebook.com/v2.6/' + senderID + '?fields=first_name,last_name,timezone&access_token=' + process.env.PAGE_ACCESS_TOKEN,\n    method: 'GET'\n  }, function (error, response, body) {\n    if (!error && response.statusCode == 200) {\n      body = JSON.parse(body);\n      //userName = body.first_name + \" \" + body.last_name;\n      console.log(\"Successfully sent generic message with the name \" + body.first_name + \" \" + body.last_name);\n      if (cb) cb(body);\n    } else {\n      console.error(\"Unable to send message.\");\n      //console.error(response);\n      //console.error(error);\n    }\n  });\n}\n\n// Incoming events handling\nfunction receivedMessage(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var timeOfMessage = event.timestamp;\n  var message = event.message;\n\n  console.log(\"Received message for user %d and page %d at %d with message:\", senderID, recipientID, timeOfMessage);\n\n  var messageId = message.mid;\n\n  var messageText = message.text;\n  var messageAttachments = message.attachments;\n\n  if (messageText) {\n    getProperty(senderID, \"User\", \"creating\", function (p) {\n      if (p) newReminder(senderID, messageText);else {\n        switch (messageText) {\n          //Cases where the text doesn't have to go through BlueMix API (Nothing right now)\n          // case 'generic':\n          //   sendGenericMessage(senderID);\n          //   break;\n          default:\n            sendTextMessage(senderID, messageText);\n        }\n      }\n    });\n  }\n  if (messageAttachments) {\n    getProperty(senderID, \"User\", \"creating\", function (p) {\n      if (p) newReminder(senderID, messageAttachments);else sendConfirm(senderID, messageAttachments[0].payload.url, messageAttachments[0].type, \"Attachment\");\n    });\n  }\n}\n\nfunction sendConfirm(senderID, url, fileType, message) {\n  url = url.replace(/&/g, '%26');\n  var urlReq = \"https://project1-minhtri1296.c9users.io/test?url=\" + url;\n  console.log(urlReq);\n  request({\n    uri: urlReq,\n    method: 'GET'\n  }, function (error, response, body) {\n    console.log(\"DONE!\");\n  });\n}\n\nfunction sendWelcomeMessage(senderId, name) {\n  var messageData = {\n    recipient: {\n      id: senderId\n    },\n    message: {\n      text: \"Welcome aboard \" + name + \"! My name is Bob. Right now I'm gonna walk you through the basic steps.\\n\" + \"To talk to me, you don't have to say exact commands everytime. For example:\\n\" + \"- Set up new reminders: 'I want to make/create/have new reminder'\\n\" + \"- Retrieve the next reminder: 'I want to see the next/upcoming/following reminder'\\n\" + \"- Retrieve the list of reminders: 'I want to list/show/get all reminders'\\nand many more...\"\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\n//Send the message when the user use 'help' command\nfunction sendHelpMessage(senderId) {\n  var messageData = {\n    recipient: {\n      id: senderId\n    },\n    message: {\n      text: \"- Set up new reminders: 'I want to make/create/have new reminder'\\n\" + \"- Retrieve the next reminder: 'I want to see the next/upcoming/following reminder'\\n\" + \"- Retrieve the list of reminders: 'I want to list/show/get all reminders'\\n\" + \"- Delete a reminder: 'I want to remove/delete/destroy' [index] (index is the index number of the reminder in the list of reminders)\" + \"- Help: 'help/instruction/command'\"\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\nfunction newReminder(senderID, messData) {\n  var respondText;\n  getProperty(senderID, \"User\", \"counter\", function (counter) {\n    getProperty(senderID, \"User\", \"reminder\", function (reminder) {\n      getProperty(senderID, \"User\", \"timezone\", function (timezone) {\n        console.log(counter);\n        if (counter == 0) {\n          reminder.userid = senderID;\n          reminder.content = messData;\n          incrementCounter(senderID);\n          respondText = {\n            text: \"When? (mm/dd/yy-hh:mm)\"\n          };\n        } else if (counter == 1) {\n          var parts = messData;\n          reminder.date = new Date(20 + parts.substr(6, 2), Number(parts.substr(0, 2)) - 1, parts.substr(3, 2), Number(parts.substr(9, 2)), parts.substr(12, 2));\n          var text = checkDate(reminder.date, parts, timezone);\n          if (text == \"Do you want add more information? (Y for yes, N for No)\") incrementCounter(senderID);\n          respondText = {\n            text: text\n          };\n        } else if (counter == 2) {\n          if (messData !== \"Y\" && messData !== \"N\") {\n            respondText = {\n              text: \"Invalid character, type again (Y/N).\"\n            };\n          } else if (messData == \"N\") {\n            flipCreating(false, senderID);\n            reminder.date.setHours(reminder.date.getHours() - timezone);\n            addDB(\"Reminder\", reminder, senderID, function (doc) {\n              var doc = doc.ops[0];\n              schedule.scheduleJob(doc.date, function (x) {\n                MongoClient.connect(url1, function (err, db) {\n                  if (err) throw err;\n                  var collection = db.collection(\"Reminder\");\n                  collection.find({ \"_id\": ObjectId(doc._id) }).toArray(function (err, docs) {\n                    if (err) throw err;\n                    if (docs.length != 0) {\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        message: {\n                          text: \"Here is something you need to do: \" + x.content\n                        }\n                      });\n                      collection.remove({ \"_id\": ObjectId(doc._id) });\n                      db.close();\n                    }\n                  });\n                });\n              }.bind(null, doc));\n            });\n            respondText = {\n              text: \"Event added successfully!\"\n            };\n            replaceCounter(0, senderID);\n            reminder = {};\n          } else {\n            respondText = {\n              text: \"What is the location? Type skip if none\"\n            };\n            incrementCounter(senderID);\n          }\n        } else if (counter == 3) {\n          if (messData != \"skip\") {\n            //reminder.location = messageText;\n            var places = getLocation(messData);\n            var long, lat;\n            var buttons = [];\n            for (var i = 0; i < Math.min(3, places.length); i++) {\n              var button = { type: \"postback\",\n                title: places[i]['name'],\n                payload: JSON.stringify(places[i]) };\n              buttons.push(button);\n            }\n\n            respondText = {\n              attachment: {\n                type: \"template\",\n                payload: {\n                  template_type: \"button\",\n                  text: \"Choose a location: \",\n                  buttons: buttons\n                }\n              }\n            };\n            //respondText.attachment.payload.buttons = buttons;\n\n            console.log(buttons);\n            callSendAPI({\n              recipient: {\n                id: senderID\n              },\n              \"message\": respondText\n\n            });\n            // console.log(typeof respondText.attachment.payload.buttons);\n            // console.log(respondText.attachment.payload.buttons);\n            // console.log(respondText);\n          } else {\n            respondText = {\n              text: \"Attach any files. Type skip of none\"\n            };\n            incrementCounter(senderID);\n          }\n\n          //respondText = \"Attach any files. Type skip of none\";\n          return;\n        } else if (counter == 4) {\n          console.log(reminder);\n          reminder.attachment = { url: \"\", type: \"\" };\n          if (messData[0].type) {\n            sendConfirm(senderID, messData[0].payload.url, messData[0].type, \"Attachment\");\n            //Later will check for total element in database files\n            reminder.attachment = { url: \"https://preview.c9users.io/minhtri1296/project1/file-upload/test.png\", type: messData[0].type };\n          }\n\n          //addDB(\"Reminder\", reminder, senderID);\n          respondText = {\n            text: \"Finshed creating reminder.\"\n          };\n          flipCreating(false, senderID);\n          replaceCounter(0, senderID);\n          console.log(\"Success!\");\n          console.log(reminder);\n          reminder.date.setHours(reminder.date.getHours() - timezone);\n          addDB(\"Reminder\", reminder, senderID, function (doc) {\n            var doc = doc.ops[0];\n            schedule.scheduleJob(reminder.date, function (x) {\n              MongoClient.connect(url1, function (err, db) {\n                if (err) throw err;\n                var collection = db.collection(\"Reminder\");\n                collection.find({ \"_id\": ObjectId(doc._id) }).toArray(function (err, docs) {\n                  if (err) throw err;\n                  if (docs.length != 0) {\n                    if (reminder.attachment) {\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        \"message\": {\n                          \"attachment\": {\n                            \"type\": reminder.attachment.type,\n                            \"payload\": {\n                              \"url\": reminder.attachment.url\n                            }\n                          }\n                        }\n                      });\n                    }\n                    if (reminder.location) {\n                      var location = JSON.parse(reminder.location);\n                      console.log(location);\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        message: {\n                          \"attachment\": {\n                            \"type\": \"template\",\n                            \"payload\": {\n                              \"template_type\": \"generic\",\n                              \"elements\": [{\n                                \"title\": location.name,\n                                \"image_url\": \"https://maps.googleapis.com/maps/api/staticmap?center=\" + location.latitude + \",\" + location.longitude + \"&zoom=15&size=600x300&maptype=roadmap&markers=color:red|\" + location.latitude + \",\" + location.longitude,\n                                \"subtitle\": \"Here is something you need to do at this location: \\\"\" + reminder.content + \"\\\"\",\n                                \"buttons\": [{\n                                  \"type\": \"web_url\",\n                                  \"url\": \"https://www.google.com/maps/place/\" + location.name + \"/@\" + location.latitude + \",\" + location.longitude,\n                                  \"title\": \"go to Google Map\"\n                                }]\n                              }]\n                            }\n                          }\n                        }\n                      });\n                      collection.remove({ \"_id\": ObjectId(doc._id) });\n                      db.close();\n                    } else {\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        message: {\n                          text: \"Here is something you need to do: \" + reminder.content\n                        }\n                      });\n                      collection.remove({ \"_id\": ObjectId(doc._id) });\n                      db.close();\n                    }\n                  }\n                });\n              });\n            }.bind(null, doc));\n          });\n        }\n        var messageData = {\n          recipient: {\n            id: senderID\n          },\n          message: respondText\n        };\n        console.log(\"test\");\n        callSendAPI(messageData);\n        console.log(counter);\n        changeReminder(senderID, reminder);\n      });\n    });\n  });\n}\n\nfunction receivedPostback(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var timeOfPostback = event.timestamp;\n\n  // The 'payload' param is a developer-defined field which is set in a postback \n  // button for Structured Messages. \n  var payload = event.postback.payload;\n\n  console.log(\"Received postback for user %d and page %d with payload '%s' \" + \"at %d\", senderID, recipientID, payload, timeOfPostback);\n\n  // When a postback is called, we'll send a message back to the sender to \n  // let them know it was successful\n\n  //Do Something after users clicked Get Started button \n  if (event.postback.payload === \"GET_STARTED_PAYLOAD\") {\n    callUserProfileAPI(senderID, function (body) {\n      var name = body.fist_name + \" \" + body.fist_name;\n      sendWelcomeMessage(senderID, name);\n    });\n  } else {\n    console.log(\"test2\");\n    getProperty(senderID, \"User\", \"reminder\", function (reminder) {\n      console.log(reminder);\n      reminder.location = payload;\n      var data = JSON.parse(payload);\n      console.log(payload);\n      console.log(reminder);\n      var messageData = {\n        recipient: {\n          id: senderID\n        },\n        message: {\n          text: \"Attach any files. Type skip of none\"\n        }\n      };\n      changeReminder(senderID, reminder);\n      incrementCounter(senderID);\n      callSendAPI(messageData);\n    });\n  }\n}\n\n//////////////////////////\n// Sending helpers\n//////////////////////////\nfunction sendTextMessage(senderID, messageText) {\n  conversation.message({\n    workspace_id: '1e7573f5-939d-47e3-8690-5ef1c0946b63',\n    input: { 'text': messageText },\n    context: context\n  }, function (err, response) {\n    if (err) console.log('error:', err);else {\n\n      var messageData;\n      if (response.intents[0]) {\n        var command = response.intents[0].intent;\n        var respond = \"\";\n        switch (command) {\n          case 'list':\n            list(senderID, function (str) {\n              callSendAPI({\n                recipient: {\n                  id: senderID\n                },\n                message: {\n                  text: str\n                }\n              });\n            });\n            break;\n          case 'next':\n            nextReminder(senderID, function (str) {\n              var options = { weekday: \"long\", year: \"numeric\", month: \"short\",\n                day: \"numeric\" };\n              callSendAPI({\n                recipient: {\n                  id: senderID\n                },\n                message: {\n                  text: \"Here is something you need to do: \" + str.content + \" after \" + str.date.toLocaleTimeString(\"en-US\", options)\n                }\n              });\n            });\n            break;\n          case 'create':\n            respond = \"What do you want to remind about?\";\n            flipCreating(true, senderID);\n            break;\n          case 'help':\n            callUserProfileAPI(senderID, function (body) {\n              var name = body.fist_name + \" \" + body.fist_name;\n              sendWelcomeMessage(senderID, name);\n            });\n            break;\n          case 'delete':\n            dbUtil.getSortedList(senderID, \"Reminder\", function (list) {\n              var index = Number(messageText.substr(messageText.length - 1, 1)) - 1;\n              if (index >= 0 && index < list.length) {\n                var id = list[index]._id;\n                MongoClient.connect(url1, function (err, db) {\n                  if (err) throw err;\n                  var collection = db.collection(\"Reminder\");\n                  collection.remove({ \"_id\": ObjectId(id) }, function (err, doc) {\n                    callSendAPI({\n                      recipient: {\n                        id: senderID\n                      },\n                      message: {\n                        text: \"deleted \" + list[index].content\n                      }\n                    });\n                  });\n                });\n              }\n            });\n            break;\n          case 'hi':\n            respond = \"Hello\";\n            break;\n          case 'thx':\n            respond = \"You're welcome\";\n            break;\n          case 'bye':\n            response = \"Good bye!\";\n            break;\n          case 'who':\n            response = \"My name is Bob\";\n            break;\n          default:\n            respond = command;\n        };\n        messageData = {\n          recipient: {\n            id: senderID\n          },\n          message: {\n            text: respond\n          }\n        };\n      } else {\n        var funnyQuotes = ['\"How do you get a sweet little 80-year-old lady to say the F word? Get another sweet little 80-year-old lady to yell \"BINGO!\" - Anonymous', 'Knowledge is knowing a tomato is a fruit; wisdom is not putting it in a fruit salad. - Miles Kington', 'By all means, marry. If you get a good wife, you’ll become happy; if you get a bad one, you’ll become a philosopher. - Socrates', 'The best way to lie is to tell the truth . . . carefully edited truth. - Anonymous', 'If you steal from one author, it’s plagiarism; if you steal from many, it’s research. - Wilson Mizner', 'If evolution really works, how come mothers only have two hands? - Milton Berle'];\n        var i = Math.floor(Math.random() * 6);\n        messageData = {\n          recipient: {\n            id: senderID\n          },\n          message: {\n            text: funnyQuotes[i] + \"\\nSorry for not understanding you. But above is a funny quote\"\n          }\n        };\n      }\n      if (messageData.message.text) callSendAPI(messageData);\n    }\n  });\n}\n\nfunction callSendAPI(messageData) {\n  request({\n    uri: 'https://graph.facebook.com/v2.6/me/messages',\n    qs: { access_token: process.env.PAGE_ACCESS_TOKEN },\n    method: 'POST',\n    json: messageData\n\n  }, function (error, response, body) {\n    if (!error && response.statusCode == 200) {\n      var recipientId = body.recipient_id;\n      var messageId = body.message_id;\n\n      //console.log(\"Successfully sent generic message with id %s to recipient %s\", messageId, recipientId);\n    } else {\n      console.error(\"Unable to send message.\");\n      console.error(response);\n      console.error(error);\n    }\n  });\n}\n//#next\nfunction nextReminder(senderID, cb) {\n  getList(senderID, \"Reminder\", function (list) {\n    if (list[0]) {\n      cb(list[0]);\n    } else cb(\"No Reminder\");\n  });\n}\n\n//#list\nfunction list(senderID, cb) {\n  getProperty(senderID, \"User\", \"timezone\", function (timezone) {\n    dbUtil.getSortedList(senderID, \"Reminder\", function (list) {\n      var i = 1;\n      var str = \"\";\n      list.forEach(function (reminder) {\n        var day = reminder.date.getDate();\n        var month = reminder.date.getMonth() + 1;\n        var year = reminder.date.getFullYear();\n        var hour = reminder.date.getHours() + timezone;\n        var minute = reminder.date.getMinutes();\n        str += i + \". Content: \" + reminder.content + \"\\n   Date: \" + month + \"/\" + day + \"/\" + year + \" \" + hour + \":\" + minute + \"\\n   Location: \" + (reminder.location !== undefined ? JSON.parse(reminder.location).name : \"none\") + \"\\n\";\n        i++;\n      });\n      if (!str) str = \"No reminders\";\n      cb(str);\n    });\n  });\n}\nfunction containsObject(id, list) {\n  var i;\n  for (i = 0; i < list.length; i++) {\n    if (list[i].userid == id) {\n      return true;\n    }\n  }\n\n  return false;\n}\nfunction incrementCounter(senderID) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({ \"userid\": senderID }, { $inc: { \"counter\": 1 } });\n  });\n}\nfunction replaceCounter(value, senderID) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({ \"userid\": senderID }, { $set: { \"counter\": value } });\n  });\n}\nfunction flipCreating(value, senderID) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({ \"userid\": senderID }, { $set: { \"creating\": value } });\n  });\n}\n//Function for database (#database)\nfunction addDB(name, object, senderID, cb) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(name);\n    collection.insert(object, function (err, docs) {\n      if (err) console.log(err);\n      if (cb) cb(docs);\n      db.close();\n    });\n  });\n}\nfunction getDB(name, cb) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(name);\n    collection.find({}, { _id: 0 }).toArray(function (err, docs) {\n      db.close();\n      cb(docs);\n    });\n  });\n}\nfunction changeReminder(senderID, value) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({ \"userid\": senderID }, { $set: { \"reminder\": value } });\n  });\n}\nfunction getProperty(senderID, collectionName, property, cb) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(collectionName);\n    collection.findOne({ \"userid\": senderID }, function (err, ret) {\n      cb(ret[property]);\n    });\n  });\n}\nfunction getList(senderID, collectionName, cb) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(collectionName);\n    collection.find({ \"userid\": senderID }).toArray(function (err, docs) {\n      cb(docs);\n    });\n  });\n}\n\nfunction checkDate(testDate, parts, timezone) {\n  var curDate = new Date();\n  testDate.setHours(testDate.getHours() - timezone);\n  var year = Number(20 + parts.substr(6, 2));\n  var month = Number(parts.substr(0, 2)) - 1;\n  var date = Number(parts.substr(3, 2));\n  var hour = Number(parts.substr(9, 2));\n  var minute = Number(parts.substr(12, 2));\n  if (curDate.getTime() > testDate.getTime()) return \"Invalid date! Please insert time in the future for your reminder\";\n  testDate.setHours(testDate.getHours() + timezone);\n  if (year != testDate.getFullYear() || month != testDate.getMonth() || date != testDate.getDate() || hour != testDate.getHours() || minute != testDate.getMinutes()) {\n    return \"Invalid date format! Please type again!\";\n  }\n  return \"Do you want add more information? (Y for yes, N for No)\";\n}\n\nfunction getLocation(location) {\n  var places = [];\n  var url = \"https://maps.googleapis.com/maps/api/place/textsearch/json?query=\" + location + \"&key=\" + process.env.GOOGLE_API_KEY;\n  var res = sRequest('GET', url, {\n    timeout: 10000\n  });\n  var data = JSON.parse(res.getBody('utf8'));\n\n  for (var i = 0; i < data.results.length; i++) {\n    var place = { \"name\": data.results[i][\"formatted_address\"],\n      \"latitude\": data.results[i][\"geometry\"][\"location\"][\"lat\"],\n      \"longitude\": data.results[i][\"geometry\"][\"location\"][\"lng\"]\n    };\n    //var messageId = body.message_id;\n    places.push(place);\n    //console.log(\"Successfully sent generic message with place \"+ place.name + \" longitude = \" + place.longitude);\n  }\n  return places;\n}\n\n// Set Express to listen out for HTTP requests\nvar server = app.listen(process.env.PORT || 3000, function () {\n  console.log(\"Listening on port %s\", server.address().port);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "bot.js"
      ],
      "names": [
        "ObjectId",
        "require",
        "ObjectID",
        "schedule",
        "watson",
        "mongodb",
        "express",
        "bodyParser",
        "sRequest",
        "request",
        "path",
        "dbUtil",
        "http",
        "fs",
        "messengerButton",
        "userName",
        "conversation",
        "username",
        "password",
        "version",
        "version_date",
        "context",
        "app",
        "use",
        "json",
        "urlencoded",
        "extended",
        "MongoClient",
        "url1",
        "get",
        "req",
        "res",
        "query",
        "process",
        "env",
        "VERIFY_TOKEN",
        "console",
        "log",
        "status",
        "send",
        "error",
        "sendStatus",
        "writeHead",
        "write",
        "end",
        "post",
        "data",
        "body",
        "object",
        "entry",
        "forEach",
        "pageID",
        "id",
        "timeOfEvent",
        "time",
        "messaging",
        "event",
        "callUserProfileAPI",
        "sender",
        "userData",
        "userid",
        "counter",
        "keywords",
        "creating",
        "reminder",
        "timezone",
        "getDB",
        "collection",
        "containsObject",
        "addDB",
        "message",
        "receivedMessage",
        "postback",
        "receivedPostback",
        "senderID",
        "cb",
        "uri",
        "PAGE_ACCESS_TOKEN",
        "method",
        "response",
        "statusCode",
        "JSON",
        "parse",
        "first_name",
        "last_name",
        "recipientID",
        "recipient",
        "timeOfMessage",
        "timestamp",
        "messageId",
        "mid",
        "messageText",
        "text",
        "messageAttachments",
        "attachments",
        "getProperty",
        "p",
        "newReminder",
        "sendTextMessage",
        "sendConfirm",
        "payload",
        "url",
        "type",
        "fileType",
        "replace",
        "urlReq",
        "sendWelcomeMessage",
        "senderId",
        "name",
        "messageData",
        "callSendAPI",
        "sendHelpMessage",
        "messData",
        "respondText",
        "content",
        "incrementCounter",
        "parts",
        "date",
        "Date",
        "substr",
        "Number",
        "checkDate",
        "flipCreating",
        "setHours",
        "getHours",
        "doc",
        "ops",
        "scheduleJob",
        "x",
        "connect",
        "err",
        "db",
        "find",
        "_id",
        "toArray",
        "docs",
        "length",
        "remove",
        "close",
        "bind",
        "replaceCounter",
        "places",
        "getLocation",
        "long",
        "lat",
        "buttons",
        "i",
        "Math",
        "min",
        "button",
        "title",
        "stringify",
        "push",
        "attachment",
        "template_type",
        "location",
        "latitude",
        "longitude",
        "changeReminder",
        "timeOfPostback",
        "fist_name",
        "workspace_id",
        "input",
        "intents",
        "command",
        "intent",
        "respond",
        "list",
        "str",
        "nextReminder",
        "options",
        "weekday",
        "year",
        "month",
        "day",
        "toLocaleTimeString",
        "getSortedList",
        "index",
        "funnyQuotes",
        "floor",
        "random",
        "qs",
        "access_token",
        "recipientId",
        "recipient_id",
        "message_id",
        "getList",
        "getDate",
        "getMonth",
        "getFullYear",
        "hour",
        "minute",
        "getMinutes",
        "undefined",
        "findOneAndUpdate",
        "$inc",
        "value",
        "$set",
        "insert",
        "collectionName",
        "property",
        "findOne",
        "ret",
        "testDate",
        "curDate",
        "getTime",
        "GOOGLE_API_KEY",
        "timeout",
        "getBody",
        "results",
        "place",
        "server",
        "listen",
        "PORT",
        "address",
        "port"
      ],
      "mappings": "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",
      "file": "bot.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "//\n// This is main file containing code implementing the Express server and functionality for the Express echo bot.\n//\n'use strict';\nconst ObjectId = require('mongodb').ObjectID;\nconst schedule = require('node-schedule');\nconst watson = require('watson-developer-cloud');\nconst mongodb = require(\"mongodb\")\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst sRequest = require('sync-request');\nconst request = require('request');\nconst path = require('path');\nconst dbUtil = require('./dbUtil');\nvar http = require('https');\nvar fs = require('fs');\n\nvar messengerButton = \"<html><head><title>Facebook Messenger Bot</title></head><body><h1>Facebook Messenger Bot</h1>This is a bot based on Messenger Platform QuickStart. For more details, see their <a href=\\\"https://developers.facebook.com/docs/messenger-platform/guides/quick-start\\\">docs</a>.<footer id=\\\"gWidget\\\"></footer><script src=\\\"https://widget.glitch.me/widget.min.js\\\"></script></body></html>\";\n//User's data\nvar userName = \"test\";\n// Watson data\nvar conversation = watson.conversation({\n  username: 'a162acb8-d510-4c1e-8e81-aa514ee3b769',\n  password: 'kWC4xmdWiQ8Z',\n  version: 'v1',\n  version_date: '2017-02-03'\n});\nvar context = {};\n// The rest of the code implements the routes for our Express server.\nlet app = express();\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\n// database config\nvar MongoClient = mongodb.MongoClient\nvar url1 = \"mongodb://tienanh2007:Dien1234@ds157040.mlab.com:57040/reminderbot\";\n// Webhook validation\napp.get('/webhook', function(req, res) {\n  if (req.query['hub.mode'] === 'subscribe' &&\n      req.query['hub.verify_token'] === process.env.VERIFY_TOKEN) {\n    console.log(\"Validating webhook\");\n    res.status(200).send(req.query['hub.challenge']);\n  } else {\n    console.error(\"Failed validation. Make sure the validation tokens match.\");\n    res.sendStatus(403);          \n  }\n});\n\n// Display the web page\napp.get('/', function(req, res) {\n  res.writeHead(200, {'Content-Type': 'text/html'});\n  res.write(messengerButton);\n  res.end();\n});\n\n// Message processing\napp.post('/webhook', function (req, res) {\n  var data = req.body;\n  if (data.object === 'page') {    \n    // Iterate over each entry - there may be multiple if batched\n    data.entry.forEach(function(entry) {\n      var pageID = entry.id;\n      var timeOfEvent = entry.time;\n      // Iterate over each messaging event\n      entry.messaging.forEach(function(event) {\n        callUserProfileAPI(event.sender.id, function(body){\n          var userData = {userid: event.sender.id, counter: 0, keywords: [], creating: false, reminder: {}, timezone: body.timezone};\n          getDB(\"User\", function(collection){\n            if(!containsObject(event.sender.id, collection)){\n              addDB(\"User\", userData, event.sender.id);              \n            }\n            if (event.message) {\n              receivedMessage(event); \n            } else if (event.postback) {\n              receivedPostback(event); \n            } else {\n              console.log(\"Webhook received unknown event: \", event);\n            }\n          });\n        });\n        \n      });\n    });\n\n    // Assume all went well.\n    //\n    // You must send back a 200, within 20 seconds, to let us know\n    // you've successfully received the callback. Otherwise, the request\n    // will time out and we will keep trying to resend.\n    res.sendStatus(200);\n  }\n});\n\n//Get the User Profile API\nfunction callUserProfileAPI(senderID, cb){\n  request({\n    uri: 'https://graph.facebook.com/v2.6/' + senderID + '?fields=first_name,last_name,timezone&access_token=' + process.env.PAGE_ACCESS_TOKEN,\n    method: 'GET'\n  }, function(error, response, body) {\n    if (!error && response.statusCode == 200) {\n      body = JSON.parse(body);\n      //userName = body.first_name + \" \" + body.last_name;\n      console.log(\"Successfully sent generic message with the name \" + body.first_name + \" \" + body.last_name);\n      if(cb) cb(body);\n    } else {\n      console.error(\"Unable to send message.\");\n      //console.error(response);\n      //console.error(error);\n    }\n  });\n}\n\n// Incoming events handling\nfunction receivedMessage(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var timeOfMessage = event.timestamp;\n  var message = event.message;\n\n  console.log(\"Received message for user %d and page %d at %d with message:\", \n    senderID, recipientID, timeOfMessage);\n\n  var messageId = message.mid;\n\n  var messageText = message.text;\n  var messageAttachments = message.attachments;\n  \n  if (messageText) {\n    getProperty(senderID, \"User\", \"creating\", function(p){\n      if(p) newReminder(senderID, messageText);\n      else{\n        switch (messageText) {\n          //Cases where the text doesn't have to go through BlueMix API (Nothing right now)\n          // case 'generic':\n          //   sendGenericMessage(senderID);\n          //   break;\n          default:\n            sendTextMessage(senderID, messageText);\n        }\n      }\n    });\n  }\n  if (messageAttachments) {\n      getProperty(senderID, \"User\", \"creating\", function(p){\n        if(p) newReminder(senderID, messageAttachments);\n        else sendConfirm(senderID, messageAttachments[0].payload.url, messageAttachments[0].type,\"Attachment\");\n      })      \n  }\n}\n\nfunction sendConfirm(senderID, url, fileType, message){\n  url = url.replace(/&/g, '%26');\n  var urlReq = \"https://project1-minhtri1296.c9users.io/test?url=\"+url;\n  console.log(urlReq);\n  request({\n    uri: urlReq,\n    method: 'GET'\n  }, function(error, response, body) {\n      console.log(\"DONE!\");\n  })\n}\n\nfunction sendWelcomeMessage(senderId, name) {\n  var messageData = {\n    recipient: {\n      id: senderId\n    },\n    message: {\n      text: \"Welcome aboard \" + name + \"! My name is Bob. Right now I'm gonna walk you through the basic steps.\\n\" +\n      \"To talk to me, you don't have to say exact commands everytime. For example:\\n\" + \n      \"- Set up new reminders: 'I want to make/create/have new reminder'\\n\" + \n      \"- Retrieve the next reminder: 'I want to see the next/upcoming/following reminder'\\n\" + \n      \"- Retrieve the list of reminders: 'I want to list/show/get all reminders'\\nand many more...\"\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\n//Send the message when the user use 'help' command\nfunction sendHelpMessage(senderId) {\n  var messageData = {\n    recipient: {\n      id: senderId\n    },\n    message: {\n      text: \"- Set up new reminders: 'I want to make/create/have new reminder'\\n\" + \n      \"- Retrieve the next reminder: 'I want to see the next/upcoming/following reminder'\\n\" + \n      \"- Retrieve the list of reminders: 'I want to list/show/get all reminders'\\n\" + \n      \"- Delete a reminder: 'I want to remove/delete/destroy' [index] (index is the index number of the reminder in the list of reminders)\" +\n      \"- Help: 'help/instruction/command'\"\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\nfunction newReminder(senderID, messData){\n  var respondText;\n  getProperty(senderID, \"User\", \"counter\", function(counter){\n    getProperty(senderID, \"User\", \"reminder\", function(reminder){\n      getProperty(senderID, \"User\", \"timezone\", function(timezone){\n        console.log(counter);\n        if (counter == 0){\n          reminder.userid = senderID;\n          reminder.content = messData;\n          incrementCounter(senderID);\n          respondText = {\n                          text: \"When? (mm/dd/yy-hh:mm)\"\n                        };\n        }\n        else if (counter == 1){\n          var parts =  messData;\n          reminder.date = new Date(20+parts.substr(6,2),Number(parts.substr(0,2))-1,parts.substr(3,2), Number(parts.substr(9,2)),parts.substr(12,2));\n          var text = checkDate(reminder.date, parts, timezone);\n          if (text == \"Do you want add more information? (Y for yes, N for No)\") incrementCounter(senderID);\n          respondText = {\n                          text: text\n                        };\n        }\n        else if(counter == 2){\n          if(messData !== \"Y\" && messData !== \"N\"){\n            respondText = {\n                          text: \"Invalid character, type again (Y/N).\"\n                        };\n          }\n          else if(messData == \"N\"){\n            flipCreating(false, senderID);\n            reminder.date.setHours(reminder.date.getHours()-timezone);\n            addDB(\"Reminder\", reminder, senderID, function(doc){\n              var doc = doc.ops[0];\n              schedule.scheduleJob(doc.date, function(x){\n                MongoClient.connect(url1, function (err, db) {\n                  if (err) throw err\n                  var collection = db.collection(\"Reminder\");\n                  collection.find({\"_id\": ObjectId(doc._id)}).toArray(function(err, docs){\n                    if (err) throw err\n                    if(docs.length != 0){\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        message: {\n                          text: \"Here is something you need to do: \" + x.content\n                        }\n                      });\n                      collection.remove({\"_id\": ObjectId(doc._id)});\n                      db.close();\n                    }\n                  });\n                });\n              }.bind(null, doc));\n            });\n            respondText = {\n              text: \"Event added successfully!\"\n            };            \n            replaceCounter(0 ,senderID);\n            reminder = {};\n          }\n          else{\n            respondText = {\n                          text: \"What is the location? Type skip if none\"\n                        };  \n            incrementCounter(senderID);\n          }\n        }\n        else if(counter == 3){\n          if(messData != \"skip\") {\n            //reminder.location = messageText;\n            var places = getLocation(messData);\n            var long, lat;\n            var buttons = [];\n            for(var i=0; i<Math.min(3, places.length); i++){\n              var button = {type:\"postback\",\n                            title:places[i]['name'],\n                            payload: JSON.stringify(places[i])}\n              buttons.push(button);\n            }\n\n            respondText = {\n              attachment:{\n                type:\"template\",\n                payload:{\n                  template_type:\"button\",\n                  text:\"Choose a location: \",\n                  buttons: buttons\n                }\n              }\n            };  \n            //respondText.attachment.payload.buttons = buttons;\n\n            console.log(buttons);\n            callSendAPI({\n                      recipient: {\n                        id: senderID\n                      },\n                      \"message\":respondText\n                        \n          })\n            // console.log(typeof respondText.attachment.payload.buttons);\n            // console.log(respondText.attachment.payload.buttons);\n            // console.log(respondText);\n          }\n          else{\n          respondText = {\n                          text: \"Attach any files. Type skip of none\"\n                        };  \n            incrementCounter(senderID);\n          }\n          \n          \n          //respondText = \"Attach any files. Type skip of none\";\n          return;\n        }\n        else if (counter == 4){\n          console.log(reminder);\n          reminder.attachment = {url: \"\", type: \"\"}\n          if (messData[0].type){\n            sendConfirm(senderID, messData[0].payload.url, messData[0].type, \"Attachment\");\n            //Later will check for total element in database files\n            reminder.attachment = {url: \"https://preview.c9users.io/minhtri1296/project1/file-upload/test.png\", type: messData[0].type};\n          }\n                    \n          //addDB(\"Reminder\", reminder, senderID);\n          respondText = {\n                          text: \"Finshed creating reminder.\"\n                        };            \n          flipCreating(false, senderID);\n          replaceCounter(0,senderID);\n          console.log(\"Success!\");\n          console.log(reminder);\n          reminder.date.setHours(reminder.date.getHours()-timezone);\n          addDB(\"Reminder\", reminder, senderID, function(doc){\n            var doc = doc.ops[0];\n            schedule.scheduleJob(reminder.date, function(x){\n              MongoClient.connect(url1, function (err, db) {\n                if (err) throw err\n                var collection = db.collection(\"Reminder\");\n                collection.find({\"_id\": ObjectId(doc._id)}).toArray(function(err, docs){\n                  if (err) throw err\n                  if(docs.length != 0){\n                    if (reminder.attachment){  \n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        \"message\":{\n                          \"attachment\":{\n                            \"type\": reminder.attachment.type,\n                            \"payload\":{\n                              \"url\": reminder.attachment.url\n                            }\n                          }\n                        }\n                      })\n                    }                    \n                    if(reminder.location){\n                      var location = JSON.parse(reminder.location);\n                      console.log(location);\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        message: {\n                          \"attachment\":{\n                            \"type\":\"template\",\n                            \"payload\":{\n                              \"template_type\":\"generic\",\n                              \"elements\":[\n                                 {\n                                  \"title\": location.name,\n                                   \"image_url\":\"https://maps.googleapis.com/maps/api/staticmap?center=\"+location.latitude+\",\"+location.longitude+\"&zoom=15&size=600x300&maptype=roadmap&markers=color:red|\"+location.latitude+\",\"+location.longitude,\n                                  \"subtitle\": \"Here is something you need to do at this location: \\\"\" + reminder.content + \"\\\"\",\n                                  \"buttons\":[\n                                    {\n                                      \"type\":\"web_url\",\n                                      \"url\":\"https://www.google.com/maps/place/\"+location.name+\"/@\"+location.latitude+\",\"+location.longitude,\n                                      \"title\":\"go to Google Map\"\n                                    }\n                                  ]      \n                                }\n                              ]\n                            }\n                          }\n                        }\n                      });\n                      collection.remove({\"_id\": ObjectId(doc._id)});\n                      db.close();\n                    }\n                    else{\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        message: {\n                          text: \"Here is something you need to do: \" + reminder.content\n                        }\n                      });\n                      collection.remove({\"_id\": ObjectId(doc._id)});\n                      db.close();\n                    }\n                  }\n                });\n              });\n            }.bind(null, doc));\n          });\n        }\n        var messageData = {\n          recipient: {\n            id: senderID\n          },\n          message: respondText\n        };\n        console.log(\"test\");\n        callSendAPI(messageData);\n        console.log(counter);\n        changeReminder(senderID, reminder);\n      });\n    });\n  });\n}\n\n\nfunction receivedPostback(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var timeOfPostback = event.timestamp;\n\n  // The 'payload' param is a developer-defined field which is set in a postback \n  // button for Structured Messages. \n  var payload = event.postback.payload;\n\n  console.log(\"Received postback for user %d and page %d with payload '%s' \" + \n    \"at %d\", senderID, recipientID, payload, timeOfPostback);\n\n  // When a postback is called, we'll send a message back to the sender to \n  // let them know it was successful\n  \n  //Do Something after users clicked Get Started button \n  if(event.postback.payload === \"GET_STARTED_PAYLOAD\"){\n    callUserProfileAPI(senderID, function(body){\n      var name = body.fist_name + \" \" + body.fist_name;\n      sendWelcomeMessage(senderID, name);\n    })\n    \n  }\n  else{\n    console.log(\"test2\");\n    getProperty(senderID, \"User\", \"reminder\", function(reminder){\n      console.log(reminder);\n      reminder.location = payload;\n      var data = JSON.parse(payload);\n      console.log(payload);\n      console.log(reminder);\n      var messageData = {\n        recipient: {\n          id: senderID\n        },\n        message: {\n          text: \"Attach any files. Type skip of none\"\n        }\n      };\n      changeReminder(senderID, reminder);\n      incrementCounter(senderID);\n      callSendAPI(messageData);\n    });\n  }\n}\n\n//////////////////////////\n// Sending helpers\n//////////////////////////\nfunction sendTextMessage(senderID, messageText) {\n  conversation.message({\n    workspace_id: '1e7573f5-939d-47e3-8690-5ef1c0946b63',\n    input: {'text': messageText},\n    context: context\n  },  function(err, response) {\n    if (err)\n      console.log('error:', err);\n    else{\n      \n      var messageData;\n      if(response.intents[0]){\n        var command = response.intents[0].intent;\n        var respond = \"\";\n        switch (command) {\n        case 'list':\n          list(senderID, function(str){\n            callSendAPI({\n              recipient: {\n                id: senderID\n              },\n              message: {\n                text: str\n              }\n            });\n          });\n        break;\n        case 'next':\n          nextReminder(senderID, function(str){\n            var options = { weekday: \"long\", year: \"numeric\", month: \"short\",  \n              day: \"numeric\" };  \n            callSendAPI({\n              recipient: {\n                id: senderID\n              },\n              message: {\n                text: \"Here is something you need to do: \" + str.content + \" after \" + str.date.toLocaleTimeString(\"en-US\", options)\n              }\n            });\n          });\n        break;\n        case 'create':\n          respond = \"What do you want to remind about?\";\n          flipCreating(true, senderID);\n        break;\n        case 'help':\n          callUserProfileAPI(senderID, function(body){\n            var name = body.fist_name + \" \" + body.fist_name;\n            sendWelcomeMessage(senderID, name);\n          })  \n        break;\n        case 'delete':\n            dbUtil.getSortedList(senderID, \"Reminder\", function(list){\n              var index = Number(messageText.substr(messageText.length-1, 1))-1;\n              if(index >= 0 && index < list.length){\n                var id = list[index]._id;\n                MongoClient.connect(url1, function (err, db) {\n                  if (err) throw err\n                  var collection = db.collection(\"Reminder\");\n                  collection.remove({\"_id\": ObjectId(id)}, function(err, doc){\n                    callSendAPI({\n                      recipient: {\n                        id: senderID\n                      },\n                      message: {\n                        text: \"deleted \" + list[index].content\n                      }\n                    });\n                  });\n                });\n              }\n            });\n        break;\n          case 'hi':\n            respond = \"Hello\";\n            break;\n          case 'thx':\n            respond = \"You're welcome\";\n            break;\n          case 'bye':\n            response = \"Good bye!\";\n            break;\n          case 'who':\n            response = \"My name is Bob\";\n            break;\n        default:\n          respond = command;\n        };\n        messageData = {\n          recipient: {\n            id: senderID\n          },\n          message: {\n            text: respond\n          }\n        }\n      }\n      else{\n        var funnyQuotes = ['\"How do you get a sweet little 80-year-old lady to say the F word? Get another sweet little 80-year-old lady to yell \"BINGO!\" - Anonymous',\n                          'Knowledge is knowing a tomato is a fruit; wisdom is not putting it in a fruit salad. - Miles Kington',\n                          'By all means, marry. If you get a good wife, you’ll become happy; if you get a bad one, you’ll become a philosopher. - Socrates',\n                          'The best way to lie is to tell the truth . . . carefully edited truth. - Anonymous',\n                          'If you steal from one author, it’s plagiarism; if you steal from many, it’s research. - Wilson Mizner',\n                          'If evolution really works, how come mothers only have two hands? - Milton Berle'];\n        var i = Math.floor(Math.random()*6);\n        messageData = {\n          recipient: {\n            id: senderID\n          },\n          message: {\n            text: funnyQuotes[i] + \"\\nSorry for not understanding you. But above is a funny quote\"\n          }\n        }\n      }\n      if(messageData.message.text) callSendAPI(messageData);\n    }\n  });\n}\n\n\nfunction callSendAPI(messageData) {\n  request({\n    uri: 'https://graph.facebook.com/v2.6/me/messages',\n    qs: { access_token: process.env.PAGE_ACCESS_TOKEN },\n    method: 'POST',\n    json: messageData\n\n  }, function (error, response, body) {\n    if (!error && response.statusCode == 200) {\n      var recipientId = body.recipient_id;\n      var messageId = body.message_id;\n\n      //console.log(\"Successfully sent generic message with id %s to recipient %s\", messageId, recipientId);\n    } else {\n      console.error(\"Unable to send message.\");\n      console.error(response);\n      console.error(error);\n    }\n  });  \n}\n//#next\nfunction nextReminder(senderID, cb){\n  getList(senderID, \"Reminder\", function(list){\n    if(list[0]){\n      cb(list[0]);\n    } \n    else cb(\"No Reminder\");\n  });\n}\n\n\n//#list\nfunction list(senderID, cb){\n  getProperty(senderID, \"User\", \"timezone\", function(timezone){\n    dbUtil.getSortedList(senderID, \"Reminder\", function(list){\n      var i = 1;\n      var str = \"\";\n      list.forEach(function(reminder){\n        var day = reminder.date.getDate();\n        var month = reminder.date.getMonth() + 1;\n        var year = reminder.date.getFullYear();\n        var hour = reminder.date.getHours()+timezone;\n        var minute = reminder.date.getMinutes();\n        str += i + \". Content: \" + reminder.content + \"\\n   Date: \" + month + \"/\" + day + \"/\" + year \n          + \" \" + hour + \":\" + minute + \"\\n   Location: \" + (reminder.location !== undefined ? JSON.parse(reminder.location).name : \"none\")+ \"\\n\";\n        i++;\n      });\n      if(!str) str = \"No reminders\";\n      cb(str);\n    });\n  });\n}\nfunction containsObject(id, list) {\n    var i;\n    for (i = 0; i < list.length; i++) {\n        if (list[i].userid == id) {\n            return true;\n        }\n    }\n\n    return false;\n}\nfunction incrementCounter(senderID){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({\"userid\":senderID},{$inc:{\"counter\":1}});\n  })\n}\nfunction replaceCounter(value, senderID){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({\"userid\":senderID},{$set:{\"counter\" : value}});\n  })\n}\nfunction flipCreating(value, senderID){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({\"userid\":senderID},{$set:{\"creating\" : value}});\n  })\n}\n//Function for database (#database)\nfunction addDB(name, object, senderID, cb){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(name);\n    collection.insert(object, function(err, docs){\n      if(err) console.log(err);\n      if(cb) cb(docs);\n      db.close();\n    });\n  })\n}\nfunction getDB(name, cb){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(name);\n    collection.find({},{_id:0}).toArray(function(err, docs) {\n      db.close();\n      cb(docs);\n    })\n  })\n}\nfunction changeReminder(senderID, value){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({\"userid\":senderID},{$set:{\"reminder\" : value}});\n  })\n}\nfunction getProperty(senderID, collectionName, property, cb){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(collectionName);\n    collection.findOne({\"userid\": senderID}, function(err, ret){\n      cb(ret[property]);\n    });\n  })\n}\nfunction getList(senderID, collectionName, cb){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(collectionName);\n    collection.find({\"userid\": senderID}).toArray(function(err, docs){\n      cb(docs);\n    });\n  })\n}\n\nfunction checkDate(testDate, parts, timezone){\n  var curDate = new Date();\n  testDate.setHours(testDate.getHours()-timezone);\n  var year = Number(20+parts.substr(6,2));\n  var month = Number(parts.substr(0,2))-1;\n  var date = Number(parts.substr(3,2));\n  var hour = Number(parts.substr(9,2));\n  var minute = Number(parts.substr(12,2));\n  if (curDate.getTime()>testDate.getTime()) return \"Invalid date! Please insert time in the future for your reminder\";\n  testDate.setHours(testDate.getHours()+timezone);\n  if (year!=testDate.getFullYear()||month!=testDate.getMonth()||date!=testDate.getDate()||hour!=testDate.getHours()||minute!=testDate.getMinutes()){\n  return \"Invalid date format! Please type again!\";\n  }\n  return \"Do you want add more information? (Y for yes, N for No)\";\n}\n\nfunction getLocation(location){\n  var places = [];\n  var url = \"https://maps.googleapis.com/maps/api/place/textsearch/json?query=\" + location + \"&key=\" + process.env.GOOGLE_API_KEY;\n  var res = sRequest('GET', url, {\n            timeout: 10000  \n        });\n  var data =  JSON.parse(res.getBody('utf8'));\n  \n  for (var i = 0; i < data.results.length; i++){\n    var place = {\"name\": data.results[i][\"formatted_address\"], \n                \"latitude\": data.results[i][\"geometry\"][\"location\"][\"lat\"],\n                \"longitude\": data.results[i][\"geometry\"][\"location\"][\"lng\"]\n                };\n    //var messageId = body.message_id;\n    places.push(place);\n    //console.log(\"Successfully sent generic message with place \"+ place.name + \" longitude = \" + place.longitude);\n  }  \n  return places;\n}\n\n// Set Express to listen out for HTTP requests\nvar server = app.listen(process.env.PORT || 3000, function () {\n  console.log(\"Listening on port %s\", server.address().port);\n});\n"
      ]
    },
    "mtime": 1491877261565
  },
  "{\"filename\":\"/app/dbUtil.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/dbUtil.js",
      "filenameRelative": "/app/dbUtil.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "dbUtil.js",
      "sourceFileName": "dbUtil.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "dbUtil"
    },
    "ignored": false,
    "code": "const mongodb = require(\"mongodb\");\nvar MongoClient = mongodb.MongoClient;\nvar url1 = \"mongodb://tienanh2007:Dien1234@ds157040.mlab.com:57040/reminderbot\";\nexports.getSortedList = function (senderID, collectionName, cb) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(collectionName);\n    collection.find({ \"userid\": senderID }, { \"sort\": [\"date\"] }).toArray(function (err, docs) {\n      cb(docs);\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiVXRpbC5qcyJdLCJuYW1lcyI6WyJtb25nb2RiIiwicmVxdWlyZSIsIk1vbmdvQ2xpZW50IiwidXJsMSIsImV4cG9ydHMiLCJnZXRTb3J0ZWRMaXN0Iiwic2VuZGVySUQiLCJjb2xsZWN0aW9uTmFtZSIsImNiIiwiY29ubmVjdCIsImVyciIsImRiIiwiY29sbGVjdGlvbiIsImZpbmQiLCJ0b0FycmF5IiwiZG9jcyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsVUFBVUMsUUFBUSxTQUFSLENBQWhCO0FBQ0EsSUFBSUMsY0FBY0YsUUFBUUUsV0FBMUI7QUFDQSxJQUFJQyxPQUFPLG9FQUFYO0FBQ0FDLFFBQVFDLGFBQVIsR0FBd0IsVUFBU0MsUUFBVCxFQUFtQkMsY0FBbkIsRUFBbUNDLEVBQW5DLEVBQXNDO0FBQzVETixjQUFZTyxPQUFaLENBQW9CTixJQUFwQixFQUEwQixVQUFVTyxHQUFWLEVBQWVDLEVBQWYsRUFBbUI7QUFDM0MsUUFBSUQsR0FBSixFQUFTLE1BQU1BLEdBQU47QUFDVCxRQUFJRSxhQUFhRCxHQUFHQyxVQUFILENBQWNMLGNBQWQsQ0FBakI7QUFDQUssZUFBV0MsSUFBWCxDQUFnQixFQUFDLFVBQVVQLFFBQVgsRUFBaEIsRUFBc0MsRUFBQyxRQUFPLENBQUMsTUFBRCxDQUFSLEVBQXRDLEVBQXlEUSxPQUF6RCxDQUFpRSxVQUFTSixHQUFULEVBQWNLLElBQWQsRUFBbUI7QUFDbEZQLFNBQUdPLElBQUg7QUFDRCxLQUZEO0FBR0QsR0FORDtBQU9ELENBUkQiLCJmaWxlIjoiZGJVdGlsLmpzIiwic291cmNlUm9vdCI6Ii9hcHAiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb2RiID0gcmVxdWlyZShcIm1vbmdvZGJcIilcbnZhciBNb25nb0NsaWVudCA9IG1vbmdvZGIuTW9uZ29DbGllbnRcbnZhciB1cmwxID0gXCJtb25nb2RiOi8vdGllbmFuaDIwMDc6RGllbjEyMzRAZHMxNTcwNDAubWxhYi5jb206NTcwNDAvcmVtaW5kZXJib3RcIjtcbmV4cG9ydHMuZ2V0U29ydGVkTGlzdCA9IGZ1bmN0aW9uKHNlbmRlcklELCBjb2xsZWN0aW9uTmFtZSwgY2Ipe1xuICBNb25nb0NsaWVudC5jb25uZWN0KHVybDEsIGZ1bmN0aW9uIChlcnIsIGRiKSB7XG4gICAgaWYgKGVycikgdGhyb3cgZXJyXG4gICAgdmFyIGNvbGxlY3Rpb24gPSBkYi5jb2xsZWN0aW9uKGNvbGxlY3Rpb25OYW1lKTtcbiAgICBjb2xsZWN0aW9uLmZpbmQoe1widXNlcmlkXCI6IHNlbmRlcklEfSwge1wic29ydFwiOltcImRhdGVcIl19KS50b0FycmF5KGZ1bmN0aW9uKGVyciwgZG9jcyl7XG4gICAgICBjYihkb2NzKTtcbiAgICB9KTtcbiAgfSlcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "dbUtil.js"
      ],
      "names": [
        "mongodb",
        "require",
        "MongoClient",
        "url1",
        "exports",
        "getSortedList",
        "senderID",
        "collectionName",
        "cb",
        "connect",
        "err",
        "db",
        "collection",
        "find",
        "toArray",
        "docs"
      ],
      "mappings": "AAAA,MAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAIC,cAAcF,QAAQE,WAA1B;AACA,IAAIC,OAAO,oEAAX;AACAC,QAAQC,aAAR,GAAwB,UAASC,QAAT,EAAmBC,cAAnB,EAAmCC,EAAnC,EAAsC;AAC5DN,cAAYO,OAAZ,CAAoBN,IAApB,EAA0B,UAAUO,GAAV,EAAeC,EAAf,EAAmB;AAC3C,QAAID,GAAJ,EAAS,MAAMA,GAAN;AACT,QAAIE,aAAaD,GAAGC,UAAH,CAAcL,cAAd,CAAjB;AACAK,eAAWC,IAAX,CAAgB,EAAC,UAAUP,QAAX,EAAhB,EAAsC,EAAC,QAAO,CAAC,MAAD,CAAR,EAAtC,EAAyDQ,OAAzD,CAAiE,UAASJ,GAAT,EAAcK,IAAd,EAAmB;AAClFP,SAAGO,IAAH;AACD,KAFD;AAGD,GAND;AAOD,CARD",
      "file": "dbUtil.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "const mongodb = require(\"mongodb\")\nvar MongoClient = mongodb.MongoClient\nvar url1 = \"mongodb://tienanh2007:Dien1234@ds157040.mlab.com:57040/reminderbot\";\nexports.getSortedList = function(senderID, collectionName, cb){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(collectionName);\n    collection.find({\"userid\": senderID}, {\"sort\":[\"date\"]}).toArray(function(err, docs){\n      cb(docs);\n    });\n  })\n}\n"
      ]
    },
    "mtime": 1491876698059
  },
  "{\"filename\":\"/app/server.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server.js",
      "filenameRelative": "/app/server.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "server.js",
      "sourceFileName": "server.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "server"
    },
    "ignored": false,
    "code": "'use strict';\n\nrequire('babel-register');\nrequire('./bot.js');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxRQUFRLGdCQUFSO0FBQ0FBLFFBQVEsVUFBUiIsImZpbGUiOiJzZXJ2ZXIuanMiLCJzb3VyY2VSb290IjoiL2FwcCIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJ2JhYmVsLXJlZ2lzdGVyJyk7ICBcbnJlcXVpcmUoJy4vYm90LmpzJyk7ICAiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "require"
      ],
      "mappings": ";;AAAAA,QAAQ,gBAAR;AACAA,QAAQ,UAAR",
      "file": "server.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "require('babel-register');  \nrequire('./bot.js');  "
      ]
    },
    "mtime": 1520898427000
  },
  "{\"filename\":\"/app/bot.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./dbUtil",
            "imported": [
              "getSortedList",
              "incrementCounter",
              "replaceCounter",
              "flipCreating",
              "addDB",
              "getDB",
              "changeReminder",
              "getProperty",
              "getList"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getSortedList",
                "local": "getSortedList"
              },
              {
                "kind": "named",
                "imported": "incrementCounter",
                "local": "incrementCounter"
              },
              {
                "kind": "named",
                "imported": "replaceCounter",
                "local": "replaceCounter"
              },
              {
                "kind": "named",
                "imported": "flipCreating",
                "local": "flipCreating"
              },
              {
                "kind": "named",
                "imported": "addDB",
                "local": "addDB"
              },
              {
                "kind": "named",
                "imported": "getDB",
                "local": "getDB"
              },
              {
                "kind": "named",
                "imported": "changeReminder",
                "local": "changeReminder"
              },
              {
                "kind": "named",
                "imported": "getProperty",
                "local": "getProperty"
              },
              {
                "kind": "named",
                "imported": "getList",
                "local": "getList"
              }
            ]
          },
          {
            "source": "./Util.js",
            "imported": [
              "nextReminder",
              "checkDate",
              "containsObject",
              "list",
              "getLocation"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "nextReminder",
                "local": "nextReminder"
              },
              {
                "kind": "named",
                "imported": "checkDate",
                "local": "checkDate"
              },
              {
                "kind": "named",
                "imported": "containsObject",
                "local": "containsObject"
              },
              {
                "kind": "named",
                "imported": "list",
                "local": "list"
              },
              {
                "kind": "named",
                "imported": "getLocation",
                "local": "getLocation"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot.js",
      "filenameRelative": "/app/bot.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "bot.js",
      "sourceFileName": "bot.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "bot"
    },
    "ignored": false,
    "code": "//\n// This is main file containing code implementing the Express server and functionality for the Express echo bot.\n//\n'use strict';\n\nvar _dbUtil = require('./dbUtil');\n\nvar _Util = require('./Util.js');\n\nvar ObjectId = require('mongodb').ObjectID;\nvar schedule = require('node-schedule');\nvar watson = require('watson-developer-cloud');\nvar mongodb = require(\"mongodb\");\nvar express = require('express');\nvar bodyParser = require('body-parser');\nvar request = require('request');\nvar path = require('path');\n\nvar http = require('https');\nvar fs = require('fs');\n\nvar messengerButton = \"<html><head><title>Facebook Messenger Bot</title></head><body><h1>Facebook Messenger Bot</h1>This is a bot based on Messenger Platform QuickStart. For more details, see their <a href=\\\"https://developers.facebook.com/docs/messenger-platform/guides/quick-start\\\">docs</a>.<footer id=\\\"gWidget\\\"></footer><script src=\\\"https://widget.glitch.me/widget.min.js\\\"></script></body></html>\";\n//User's data\nvar userName = \"test\";\n// Watson data\nvar conversation = watson.conversation({\n  username: 'a162acb8-d510-4c1e-8e81-aa514ee3b769',\n  password: 'kWC4xmdWiQ8Z',\n  version: 'v1',\n  version_date: '2017-02-03'\n});\nvar context = {};\n// The rest of the code implements the routes for our Express server.\nvar app = express();\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\n// database config\nvar MongoClient = mongodb.MongoClient;\nvar url1 = \"mongodb://tienanh2007:Dien1234@ds157040.mlab.com:57040/reminderbot\";\n// Webhook validation\napp.get('/webhook', function (req, res) {\n  if (req.query['hub.mode'] === 'subscribe' && req.query['hub.verify_token'] === process.env.VERIFY_TOKEN) {\n    console.log(\"Validating webhook\");\n    res.status(200).send(req.query['hub.challenge']);\n  } else {\n    console.error(\"Failed validation. Make sure the validation tokens match.\");\n    res.sendStatus(403);\n  }\n});\n\n// Display the web page\napp.get('/', function (req, res) {\n  res.writeHead(200, { 'Content-Type': 'text/html' });\n  res.write(messengerButton);\n  res.end();\n});\n\n// Message processing\napp.post('/webhook', function (req, res) {\n  var data = req.body;\n  if (data.object === 'page') {\n    // Iterate over each entry - there may be multiple if batched\n    data.entry.forEach(function (entry) {\n      var pageID = entry.id;\n      var timeOfEvent = entry.time;\n      // Iterate over each messaging event\n      entry.messaging.forEach(function (event) {\n        callUserProfileAPI(event.sender.id, function (body) {\n          var userData = { userid: event.sender.id, counter: 0, keywords: [], creating: false, reminder: {}, timezone: body.timezone };\n          (0, _dbUtil.getDB)(\"User\", function (collection) {\n            if (!(0, _Util.containsObject)(event.sender.id, collection)) {\n              (0, _dbUtil.addDB)(\"User\", userData, event.sender.id);\n            }\n            if (event.message) {\n              receivedMessage(event);\n            } else if (event.postback) {\n              receivedPostback(event);\n            } else {\n              console.log(\"Webhook received unknown event: \", event);\n            }\n          });\n        });\n      });\n    });\n\n    // Assume all went well.\n    //\n    // You must send back a 200, within 20 seconds, to let us know\n    // you've successfully received the callback. Otherwise, the request\n    // will time out and we will keep trying to resend.\n    res.sendStatus(200);\n  }\n});\n\nfunction receivedMessage(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var timeOfMessage = event.timestamp;\n  var message = event.message;\n\n  console.log(\"Received message for user %d and page %d at %d with message:\", senderID, recipientID, timeOfMessage);\n\n  var messageId = message.mid;\n\n  var messageText = message.text;\n  var messageAttachments = message.attachments;\n\n  if (messageText) {\n    (0, _dbUtil.getProperty)(senderID, \"User\", \"creating\", function (p) {\n      if (p) newReminder(senderID, messageText);else {\n        switch (messageText) {\n          //Cases where the text doesn't have to go through BlueMix API (Nothing right now)\n          // case 'generic':\n          //   sendGenericMessage(senderID);\n          //   break;\n          default:\n            sendTextMessage(senderID, messageText);\n        }\n      }\n    });\n  }\n  if (messageAttachments) {\n    (0, _dbUtil.getProperty)(senderID, \"User\", \"creating\", function (p) {\n      if (p) newReminder(senderID, messageAttachments);else getAttachment(senderID, messageAttachments[0].payload.url, messageAttachments[0].type, \"Attachment\");\n    });\n  }\n}\n\nfunction receivedPostback(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var timeOfPostback = event.timestamp;\n\n  // The 'payload' param is a developer-defined field which is set in a postback \n  // button for Structured Messages. \n  var payload = event.postback.payload;\n\n  console.log(\"Received postback for user %d and page %d with payload '%s' \" + \"at %d\", senderID, recipientID, payload, timeOfPostback);\n\n  // When a postback is called, we'll send a message back to the sender to \n  // let them know it was successful\n\n  //Do Something after users clicked Get Started button \n  if (event.postback.payload === \"GET_STARTED_PAYLOAD\") {\n    callUserProfileAPI(senderID, function (body) {\n      console.log(body);\n      var name = body.fist_name + \" \" + body.fist_name;\n      sendWelcomeMessage(senderID, userName);\n    });\n  } else {\n    (0, _dbUtil.getProperty)(senderID, \"User\", \"reminder\", function (reminder) {\n      console.log(reminder);\n      reminder.location = payload;\n      var data = JSON.parse(payload);\n      //console.log(payload);\n      var messageData = {\n        recipient: {\n          id: senderID\n        },\n        message: {\n          text: \"Attach any files. Type skip if none\"\n        }\n      };\n      (0, _dbUtil.changeReminder)(senderID, reminder);\n      (0, _dbUtil.incrementCounter)(senderID);\n      callSendAPI(messageData);\n    });\n  }\n}\n\n//////////////////////////\n// Sending helpers\n//////////////////////////\nfunction sendTextMessage(senderID, messageText) {\n  conversation.message({\n    workspace_id: '1e7573f5-939d-47e3-8690-5ef1c0946b63',\n    input: { 'text': messageText },\n    context: context\n  }, function (err, response) {\n    if (err) console.log('error:', err);else {\n\n      var messageData;\n      if (response.intents[0]) {\n        var command = response.intents[0].intent;\n        var respond = \"\";\n        switch (command) {\n          case 'list':\n            (0, _Util.list)(senderID, function (str) {\n              callSendAPI({\n                recipient: {\n                  id: senderID\n                },\n                message: {\n                  text: str\n                }\n              });\n            });\n            break;\n          case 'next':\n            (0, _Util.nextReminder)(senderID, function (str) {\n              var options = { weekday: \"long\", year: \"numeric\", month: \"short\",\n                day: \"numeric\" };\n              callSendAPI({\n                recipient: {\n                  id: senderID\n                },\n                message: {\n                  text: \"Here is something you need to do: \" + str.content + \" after \" + str.date.toLocaleTimeString(\"en-US\", options)\n                }\n              });\n            });\n            break;\n          case 'create':\n            respond = \"What do you want to remind about?\";\n            (0, _dbUtil.flipCreating)(true, senderID);\n            break;\n          case 'help':\n            sendHelpMessage(senderID);\n            break;\n          case 'delete':\n            (0, _dbUtil.getSortedList)(senderID, \"Reminder\", function (list) {\n              var index = Number(messageText.substr(messageText.length - 1, 1)) - 1;\n              if (index >= 0 && index < list.length) {\n                var id = list[index]._id;\n                MongoClient.connect(url1, function (err, db) {\n                  if (err) throw err;\n                  var collection = db.collection(\"Reminder\");\n                  collection.remove({ \"_id\": ObjectId(id) }, function (err, doc) {\n                    callSendAPI({\n                      recipient: {\n                        id: senderID\n                      },\n                      message: {\n                        text: \"deleted \" + list[index].content\n                      }\n                    });\n                  });\n                });\n              }\n            });\n            break;\n          case 'hi':\n            respond = \"Hello\";\n            break;\n          case 'thx':\n            respond = \"You're welcome\";\n            break;\n          case 'bye':\n            respond = \"Good bye!\";\n            break;\n          case 'who':\n            respond = \"My name is Bob\";\n            break;\n          default:\n            respond = command;\n        };\n        messageData = {\n          recipient: {\n            id: senderID\n          },\n          message: {\n            text: respond\n          }\n        };\n      } else {\n        var funnyQuotes = ['\"How do you get a sweet little 80-year-old lady to say the F word? Get another sweet little 80-year-old lady to yell \"BINGO!\" - Anonymous', 'Knowledge is knowing a tomato is a fruit; wisdom is not putting it in a fruit salad. - Miles Kington', 'By all means, marry. If you get a good wife, you’ll become happy; if you get a bad one, you’ll become a philosopher. - Socrates', 'The best way to lie is to tell the truth . . . carefully edited truth. - Anonymous', 'If you steal from one author, it’s plagiarism; if you steal from many, it’s research. - Wilson Mizner', 'If evolution really works, how come mothers only have two hands? - Milton Berle'];\n        var i = Math.floor(Math.random() * 6);\n        messageData = {\n          recipient: {\n            id: senderID\n          },\n          message: {\n            text: funnyQuotes[i] + \"\\nSorry for not understanding you. But above is a funny quote\"\n          }\n        };\n      }\n      if (messageData.message.text) callSendAPI(messageData);\n    }\n  });\n}\n\nfunction sendWelcomeMessage(senderId, name) {\n  var messageData = {\n    recipient: {\n      id: senderId\n    },\n    message: {\n      text: \"Welcome aboard \" + name + \"! My name is Bob. Right now I'm gonna walk you through the basic steps.\\n\" + \"To talk to me, you don't have to say exact commands everytime. For example:\\n\" + \"- Set up new reminders: 'I want to make/create/have new reminder'\\n\" + \"- Retrieve the next reminder: 'I want to see the next/upcoming/following reminder'\\n\" + \"- Retrieve the list of reminders: 'I want to list/show/get all reminders'\\nand many more...\"\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\n//Send the message when the user use 'help' command\nfunction sendHelpMessage(senderId) {\n  var messageData = {\n    recipient: {\n      id: senderId\n    },\n    message: {\n      text: \"- Set up new reminders: 'I want to make/create/have new reminder'\\n\" + \"- Retrieve the next reminder: 'I want to see the next/upcoming/following reminder'\\n\" + \"- Retrieve the list of reminders: 'I want to list/show/get all reminders'\\n\" + \"- Delete a reminder: 'I want to remove/delete/destroy' [index] (index is the index number of the reminder in the list of reminders)\\n\" + \"- Help: 'help/instruction/command'\"\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\nfunction getAttachment(senderID, url, fileType, message) {\n  url = url.replace(/&/g, '%26');\n  var urlReq = \"https://project1-minhtri1296.c9users.io/test?url=\" + url + \"&type=\" + fileType + \"&userid=\" + senderID;\n  console.log(urlReq);\n  request({\n    uri: urlReq,\n    method: 'GET'\n  }, function (error, response, body) {\n    console.log(\"DONE!\");\n  });\n}\n\nfunction countAttachment(senderID) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(\"Attachments\");\n    collection.find({ \"userid\": senderID }).count(function (err, result) {\n      console.log(count);\n      var count = result;\n    });\n  });\n}\n\nfunction callSendAPI(messageData) {\n  request({\n    uri: 'https://graph.facebook.com/v2.6/me/messages',\n    qs: { access_token: process.env.PAGE_ACCESS_TOKEN },\n    method: 'POST',\n    json: messageData\n\n  }, function (error, response, body) {\n    if (!error && response.statusCode == 200) {\n      var recipientId = body.recipient_id;\n      var messageId = body.message_id;\n\n      //console.log(\"Successfully sent generic message with id %s to recipient %s\", messageId, recipientId);\n    } else {\n      console.error(\"Unable to send message.\");\n      console.error(response);\n      console.error(error);\n    }\n  });\n}\n\n//Get the User Profile API\nfunction callUserProfileAPI(senderID, cb) {\n  request({\n    uri: 'https://graph.facebook.com/v2.6/' + senderID + '?fields=first_name,last_name,timezone&access_token=' + process.env.PAGE_ACCESS_TOKEN,\n    method: 'GET'\n  }, function (error, response, body) {\n    if (!error && response.statusCode == 200) {\n      body = JSON.parse(body);\n      userName = body.first_name + \" \" + body.last_name;\n      console.log(\"Successfully sent generic message with the name \" + body.first_name + \" \" + body.last_name);\n      if (cb) cb(body);\n    } else {\n      console.error(\"Unable to send message.\");\n      //console.error(response);\n      //console.error(error);\n    }\n  });\n}\n\nfunction newReminder(senderID, messData) {\n  var respondText;\n  (0, _dbUtil.getProperty)(senderID, \"User\", \"counter\", function (counter) {\n    (0, _dbUtil.getProperty)(senderID, \"User\", \"reminder\", function (reminder) {\n      (0, _dbUtil.getProperty)(senderID, \"User\", \"timezone\", function (timezone) {\n        console.log(counter);\n        if (counter == 0) {\n          reminder.userid = senderID;\n          reminder.content = messData;\n          (0, _dbUtil.incrementCounter)(senderID);\n          respondText = {\n            text: \"When? (mm/dd/yy-hh:mm)\"\n          };\n        } else if (counter == 1) {\n          var parts = messData;\n          reminder.date = new Date(20 + parts.substr(6, 2), Number(parts.substr(0, 2)) - 1, parts.substr(3, 2), Number(parts.substr(9, 2)), parts.substr(12, 2));\n          var text = (0, _Util.checkDate)(reminder.date, parts, timezone);\n          if (text == \"Do you want add more information? (Y for yes, N for No)\") (0, _dbUtil.incrementCounter)(senderID);\n          respondText = {\n            text: text\n          };\n        } else if (counter == 2) {\n          if (messData !== \"Y\" && messData !== \"N\") {\n            respondText = {\n              text: \"Invalid character, type again (Y/N).\"\n            };\n          } else if (messData == \"N\") {\n            (0, _dbUtil.flipCreating)(false, senderID);\n            reminder.date.setHours(reminder.date.getHours() - timezone);\n            (0, _dbUtil.addDB)(\"Reminder\", reminder, senderID, function (doc) {\n              var doc = doc.ops[0];\n              schedule.scheduleJob(doc.date, function (x) {\n                MongoClient.connect(url1, function (err, db) {\n                  if (err) throw err;\n                  var collection = db.collection(\"Reminder\");\n                  collection.find({ \"_id\": ObjectId(doc._id) }).toArray(function (err, docs) {\n                    if (err) throw err;\n                    if (docs.length != 0) {\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        message: {\n                          text: \"Here is something you need to do: \" + x.content\n                        }\n                      });\n                      collection.remove({ \"_id\": ObjectId(doc._id) });\n                      db.close();\n                    }\n                  });\n                });\n              }.bind(null, doc));\n            });\n            respondText = {\n              text: \"Event added successfully!\"\n            };\n            (0, _dbUtil.replaceCounter)(0, senderID);\n            reminder = {};\n          } else {\n            respondText = {\n              text: \"What is the location? Type skip if none\"\n            };\n            (0, _dbUtil.incrementCounter)(senderID);\n          }\n        } else if (counter == 3) {\n          if (messData != \"skip\") {\n            //reminder.location = messageText;\n            var places = (0, _Util.getLocation)(messData);\n            var long, lat;\n            var buttons = [];\n            for (var i = 0; i < Math.min(3, places.length); i++) {\n              var button = { type: \"postback\",\n                title: places[i]['name'],\n                payload: JSON.stringify(places[i]) };\n              buttons.push(button);\n            }\n\n            respondText = {\n              attachment: {\n                type: \"template\",\n                payload: {\n                  template_type: \"button\",\n                  text: \"Choose a location: \",\n                  buttons: buttons\n                }\n              }\n            };\n            //respondText.attachment.payload.buttons = buttons;\n\n            console.log(buttons);\n            callSendAPI({\n              recipient: {\n                id: senderID\n              },\n              \"message\": respondText\n\n            });\n            // console.log(typeof respondText.attachment.payload.buttons);\n            // console.log(respondText.attachment.payload.buttons);\n            // console.log(respondText);\n          } else {\n            respondText = {\n              text: \"Attach any files. Type skip of none\"\n            };\n            (0, _dbUtil.incrementCounter)(senderID);\n          }\n\n          //respondText = \"Attach any files. Type skip of none\";\n          return;\n        } else if (counter == 4) {\n          console.log(reminder);\n          reminder.attachment = { url: \"\", type: \"\" };\n          if (messData[0].type) {\n            getAttachment(senderID, messData[0].payload.url, messData[0].type, \"Attachment\");\n            //Later will check for total element in database files\n            reminder.attachment = { url: \"https://preview.c9users.io/minhtri1296/project1/file-upload/test.png\", type: messData[0].type };\n          }\n\n          //addDB(\"Reminder\", reminder, senderID);\n          respondText = {\n            text: \"Finshed creating reminder.\"\n          };\n          (0, _dbUtil.flipCreating)(false, senderID);\n          (0, _dbUtil.replaceCounter)(0, senderID);\n          console.log(\"Success!\");\n          console.log(reminder);\n          reminder.date.setHours(reminder.date.getHours() - timezone);\n          (0, _dbUtil.addDB)(\"Reminder\", reminder, senderID, function (doc) {\n            var doc = doc.ops[0];\n            schedule.scheduleJob(reminder.date, function (x) {\n              MongoClient.connect(url1, function (err, db) {\n                if (err) throw err;\n                var collection = db.collection(\"Reminder\");\n                collection.find({ \"_id\": ObjectId(doc._id) }).toArray(function (err, docs) {\n                  if (err) throw err;\n                  if (docs.length != 0) {\n                    if (reminder.attachment) {\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        \"message\": {\n                          \"attachment\": {\n                            \"type\": reminder.attachment.type,\n                            \"payload\": {\n                              \"url\": reminder.attachment.url\n                            }\n                          }\n                        }\n                      });\n                    }\n                    if (reminder.location) {\n                      var location = JSON.parse(reminder.location);\n                      console.log(location);\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        message: {\n                          \"attachment\": {\n                            \"type\": \"template\",\n                            \"payload\": {\n                              \"template_type\": \"generic\",\n                              \"elements\": [{\n                                \"title\": location.name,\n                                \"image_url\": \"https://maps.googleapis.com/maps/api/staticmap?center=\" + location.latitude + \",\" + location.longitude + \"&zoom=15&size=600x300&maptype=roadmap&markers=color:red|\" + location.latitude + \",\" + location.longitude,\n                                \"subtitle\": \"Here is something you need to do at this location: \\\"\" + reminder.content + \"\\\"\",\n                                \"buttons\": [{\n                                  \"type\": \"web_url\",\n                                  \"url\": \"https://www.google.com/maps/place/\" + location.name + \"/@\" + location.latitude + \",\" + location.longitude,\n                                  \"title\": \"go to Google Map\"\n                                }]\n                              }]\n                            }\n                          }\n                        }\n                      });\n                      collection.remove({ \"_id\": ObjectId(doc._id) });\n                      db.close();\n                    } else {\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        message: {\n                          text: \"Here is something you need to do: \" + reminder.content\n                        }\n                      });\n                      collection.remove({ \"_id\": ObjectId(doc._id) });\n                      db.close();\n                    }\n                  }\n                });\n              });\n            }.bind(null, doc));\n          });\n        }\n        var messageData = {\n          recipient: {\n            id: senderID\n          },\n          message: respondText\n        };\n        console.log(\"test\");\n        callSendAPI(messageData);\n        console.log(counter);\n        (0, _dbUtil.changeReminder)(senderID, reminder);\n      });\n    });\n  });\n}\n\n// Set Express to listen out for HTTP requests\nvar server = app.listen(process.env.PORT || 3000, function () {\n  console.log(\"Listening on port %s\", server.address().port);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "bot.js"
      ],
      "names": [
        "ObjectId",
        "require",
        "ObjectID",
        "schedule",
        "watson",
        "mongodb",
        "express",
        "bodyParser",
        "request",
        "path",
        "http",
        "fs",
        "messengerButton",
        "userName",
        "conversation",
        "username",
        "password",
        "version",
        "version_date",
        "context",
        "app",
        "use",
        "json",
        "urlencoded",
        "extended",
        "MongoClient",
        "url1",
        "get",
        "req",
        "res",
        "query",
        "process",
        "env",
        "VERIFY_TOKEN",
        "console",
        "log",
        "status",
        "send",
        "error",
        "sendStatus",
        "writeHead",
        "write",
        "end",
        "post",
        "data",
        "body",
        "object",
        "entry",
        "forEach",
        "pageID",
        "id",
        "timeOfEvent",
        "time",
        "messaging",
        "event",
        "callUserProfileAPI",
        "sender",
        "userData",
        "userid",
        "counter",
        "keywords",
        "creating",
        "reminder",
        "timezone",
        "collection",
        "message",
        "receivedMessage",
        "postback",
        "receivedPostback",
        "senderID",
        "recipientID",
        "recipient",
        "timeOfMessage",
        "timestamp",
        "messageId",
        "mid",
        "messageText",
        "text",
        "messageAttachments",
        "attachments",
        "p",
        "newReminder",
        "sendTextMessage",
        "getAttachment",
        "payload",
        "url",
        "type",
        "timeOfPostback",
        "name",
        "fist_name",
        "sendWelcomeMessage",
        "location",
        "JSON",
        "parse",
        "messageData",
        "callSendAPI",
        "workspace_id",
        "input",
        "err",
        "response",
        "intents",
        "command",
        "intent",
        "respond",
        "str",
        "options",
        "weekday",
        "year",
        "month",
        "day",
        "content",
        "date",
        "toLocaleTimeString",
        "sendHelpMessage",
        "list",
        "index",
        "Number",
        "substr",
        "length",
        "_id",
        "connect",
        "db",
        "remove",
        "doc",
        "funnyQuotes",
        "i",
        "Math",
        "floor",
        "random",
        "senderId",
        "fileType",
        "replace",
        "urlReq",
        "uri",
        "method",
        "countAttachment",
        "find",
        "count",
        "result",
        "qs",
        "access_token",
        "PAGE_ACCESS_TOKEN",
        "statusCode",
        "recipientId",
        "recipient_id",
        "message_id",
        "cb",
        "first_name",
        "last_name",
        "messData",
        "respondText",
        "parts",
        "Date",
        "setHours",
        "getHours",
        "ops",
        "scheduleJob",
        "x",
        "toArray",
        "docs",
        "close",
        "bind",
        "places",
        "long",
        "lat",
        "buttons",
        "min",
        "button",
        "title",
        "stringify",
        "push",
        "attachment",
        "template_type",
        "latitude",
        "longitude",
        "server",
        "listen",
        "PORT",
        "address",
        "port"
      ],
      "mappings": "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",
      "file": "bot.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "//\n// This is main file containing code implementing the Express server and functionality for the Express echo bot.\n//\n'use strict';\nconst ObjectId = require('mongodb').ObjectID;\nconst schedule = require('node-schedule');\nconst watson = require('watson-developer-cloud');\nconst mongodb = require(\"mongodb\")\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst request = require('request');\nconst path = require('path');\nimport {getSortedList, incrementCounter, replaceCounter, flipCreating, \n        addDB, getDB, changeReminder, getProperty, getList} from './dbUtil';\nimport {nextReminder, checkDate, containsObject, list, getLocation} from './Util.js';\nvar http = require('https');\nvar fs = require('fs');\n\nvar messengerButton = \"<html><head><title>Facebook Messenger Bot</title></head><body><h1>Facebook Messenger Bot</h1>This is a bot based on Messenger Platform QuickStart. For more details, see their <a href=\\\"https://developers.facebook.com/docs/messenger-platform/guides/quick-start\\\">docs</a>.<footer id=\\\"gWidget\\\"></footer><script src=\\\"https://widget.glitch.me/widget.min.js\\\"></script></body></html>\";\n//User's data\nvar userName = \"test\";\n// Watson data\nvar conversation = watson.conversation({\n  username: 'a162acb8-d510-4c1e-8e81-aa514ee3b769',\n  password: 'kWC4xmdWiQ8Z',\n  version: 'v1',\n  version_date: '2017-02-03'\n});\nvar context = {};\n// The rest of the code implements the routes for our Express server.\nlet app = express();\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\n// database config\nvar MongoClient = mongodb.MongoClient\nvar url1 = \"mongodb://tienanh2007:Dien1234@ds157040.mlab.com:57040/reminderbot\";\n// Webhook validation\napp.get('/webhook', function(req, res) {\n  if (req.query['hub.mode'] === 'subscribe' &&\n      req.query['hub.verify_token'] === process.env.VERIFY_TOKEN) {\n    console.log(\"Validating webhook\");\n    res.status(200).send(req.query['hub.challenge']);\n  } else {\n    console.error(\"Failed validation. Make sure the validation tokens match.\");\n    res.sendStatus(403);          \n  }\n});\n\n// Display the web page\napp.get('/', function(req, res) {\n  res.writeHead(200, {'Content-Type': 'text/html'});\n  res.write(messengerButton);\n  res.end();\n});\n\n// Message processing\napp.post('/webhook', function (req, res) {\n  var data = req.body;\n  if (data.object === 'page') {    \n    // Iterate over each entry - there may be multiple if batched\n    data.entry.forEach(function(entry) {\n      var pageID = entry.id;\n      var timeOfEvent = entry.time;\n      // Iterate over each messaging event\n      entry.messaging.forEach(function(event) {\n        callUserProfileAPI(event.sender.id, function(body){\n          var userData = {userid: event.sender.id, counter: 0, keywords: [], creating: false, reminder: {}, timezone: body.timezone};\n          getDB(\"User\", function(collection){\n            if(!containsObject(event.sender.id, collection)){\n              addDB(\"User\", userData, event.sender.id);              \n            }\n            if (event.message) {\n              receivedMessage(event); \n            } else if (event.postback) {\n              receivedPostback(event); \n            } else {\n              console.log(\"Webhook received unknown event: \", event);\n            }\n          });\n        });\n        \n      });\n    });\n\n    // Assume all went well.\n    //\n    // You must send back a 200, within 20 seconds, to let us know\n    // you've successfully received the callback. Otherwise, the request\n    // will time out and we will keep trying to resend.\n    res.sendStatus(200);\n  }\n});\n\nfunction receivedMessage(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var timeOfMessage = event.timestamp;\n  var message = event.message;\n\n  console.log(\"Received message for user %d and page %d at %d with message:\", \n    senderID, recipientID, timeOfMessage);\n\n  var messageId = message.mid;\n\n  var messageText = message.text;\n  var messageAttachments = message.attachments;\n  \n  if (messageText) {\n    getProperty(senderID, \"User\", \"creating\", function(p){\n      if(p) newReminder(senderID, messageText);\n      else{\n        switch (messageText) {\n          //Cases where the text doesn't have to go through BlueMix API (Nothing right now)\n          // case 'generic':\n          //   sendGenericMessage(senderID);\n          //   break;\n          default:\n            sendTextMessage(senderID, messageText);\n        }\n      }\n    });\n  }\n  if (messageAttachments) {\n      getProperty(senderID, \"User\", \"creating\", function(p){\n        if(p) newReminder(senderID, messageAttachments);\n        else getAttachment(senderID, messageAttachments[0].payload.url, messageAttachments[0].type,\"Attachment\");\n      })      \n  }\n}\n\nfunction receivedPostback(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var timeOfPostback = event.timestamp;\n\n  // The 'payload' param is a developer-defined field which is set in a postback \n  // button for Structured Messages. \n  var payload = event.postback.payload;\n\n  console.log(\"Received postback for user %d and page %d with payload '%s' \" + \n    \"at %d\", senderID, recipientID, payload, timeOfPostback);\n\n  // When a postback is called, we'll send a message back to the sender to \n  // let them know it was successful\n  \n  //Do Something after users clicked Get Started button \n  if(event.postback.payload === \"GET_STARTED_PAYLOAD\"){\n    callUserProfileAPI(senderID, function(body){\n      console.log(body);\n      var name = body.fist_name + \" \" + body.fist_name;\n      sendWelcomeMessage(senderID, userName);\n    })\n    \n  }\n  else{\n    getProperty(senderID, \"User\", \"reminder\", function(reminder){\n      console.log(reminder);\n      reminder.location = payload;\n      var data = JSON.parse(payload);\n      //console.log(payload);\n      var messageData = {\n        recipient: {\n          id: senderID\n        },\n        message: {\n          text: \"Attach any files. Type skip if none\"\n        }\n      };\n      changeReminder(senderID, reminder);\n      incrementCounter(senderID);\n      callSendAPI(messageData);\n    });\n  }\n}\n\n//////////////////////////\n// Sending helpers\n//////////////////////////\nfunction sendTextMessage(senderID, messageText) {\n  conversation.message({\n    workspace_id: '1e7573f5-939d-47e3-8690-5ef1c0946b63',\n    input: {'text': messageText},\n    context: context\n  },  function(err, response) {\n    if (err)\n      console.log('error:', err);\n    else{\n      \n      var messageData;\n      if(response.intents[0]){\n        var command = response.intents[0].intent;\n        var respond = \"\";\n        switch (command) {\n        case 'list':\n          list(senderID, function(str){\n            callSendAPI({\n              recipient: {\n                id: senderID\n              },\n              message: {\n                text: str\n              }\n            });\n          });\n        break;\n        case 'next':\n          nextReminder(senderID, function(str){\n            var options = { weekday: \"long\", year: \"numeric\", month: \"short\",  \n              day: \"numeric\" };  \n            callSendAPI({\n              recipient: {\n                id: senderID\n              },\n              message: {\n                text: \"Here is something you need to do: \" + str.content + \" after \" + str.date.toLocaleTimeString(\"en-US\", options)\n              }\n            });\n          });\n        break;\n        case 'create':\n          respond = \"What do you want to remind about?\";\n          flipCreating(true, senderID);\n        break;\n        case 'help':                      \n          sendHelpMessage(senderID);          \n        break;\n        case 'delete':\n            getSortedList(senderID, \"Reminder\", function(list){\n              var index = Number(messageText.substr(messageText.length-1, 1))-1;\n              if(index >= 0 && index < list.length){\n                var id = list[index]._id;\n                MongoClient.connect(url1, function (err, db) {\n                  if (err) throw err\n                  var collection = db.collection(\"Reminder\");\n                  collection.remove({\"_id\": ObjectId(id)}, function(err, doc){\n                    callSendAPI({\n                      recipient: {\n                        id: senderID\n                      },\n                      message: {\n                        text: \"deleted \" + list[index].content\n                      }\n                    });\n                  });\n                });\n              }\n            });\n        break;\n          case 'hi':\n            respond = \"Hello\";\n            break;\n          case 'thx':\n            respond = \"You're welcome\";\n            break;\n          case 'bye':\n            respond = \"Good bye!\";\n            break;\n          case 'who':\n            respond = \"My name is Bob\";\n            break;\n        default:\n          respond = command;\n        };\n        messageData = {\n          recipient: {\n            id: senderID\n          },\n          message: {\n            text: respond\n          }\n        }\n      }\n      else{\n        var funnyQuotes = ['\"How do you get a sweet little 80-year-old lady to say the F word? Get another sweet little 80-year-old lady to yell \"BINGO!\" - Anonymous',\n                          'Knowledge is knowing a tomato is a fruit; wisdom is not putting it in a fruit salad. - Miles Kington',\n                          'By all means, marry. If you get a good wife, you’ll become happy; if you get a bad one, you’ll become a philosopher. - Socrates',\n                          'The best way to lie is to tell the truth . . . carefully edited truth. - Anonymous',\n                          'If you steal from one author, it’s plagiarism; if you steal from many, it’s research. - Wilson Mizner',\n                          'If evolution really works, how come mothers only have two hands? - Milton Berle'];\n        var i = Math.floor(Math.random()*6);\n        messageData = {\n          recipient: {\n            id: senderID\n          },\n          message: {\n            text: funnyQuotes[i] + \"\\nSorry for not understanding you. But above is a funny quote\"\n          }\n        }\n      }\n      if(messageData.message.text) callSendAPI(messageData);\n    }\n  });\n}\n\nfunction sendWelcomeMessage(senderId, name) {\n  var messageData = {\n    recipient: {\n      id: senderId\n    },\n    message: {\n      text: \"Welcome aboard \" + name + \"! My name is Bob. Right now I'm gonna walk you through the basic steps.\\n\" +\n      \"To talk to me, you don't have to say exact commands everytime. For example:\\n\" + \n      \"- Set up new reminders: 'I want to make/create/have new reminder'\\n\" + \n      \"- Retrieve the next reminder: 'I want to see the next/upcoming/following reminder'\\n\" + \n      \"- Retrieve the list of reminders: 'I want to list/show/get all reminders'\\nand many more...\"\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\n//Send the message when the user use 'help' command\nfunction sendHelpMessage(senderId) {\n  var messageData = {\n    recipient: {\n      id: senderId\n    },\n    message: {\n      text: \"- Set up new reminders: 'I want to make/create/have new reminder'\\n\" + \n      \"- Retrieve the next reminder: 'I want to see the next/upcoming/following reminder'\\n\" + \n      \"- Retrieve the list of reminders: 'I want to list/show/get all reminders'\\n\" + \n      \"- Delete a reminder: 'I want to remove/delete/destroy' [index] (index is the index number of the reminder in the list of reminders)\\n\" +\n      \"- Help: 'help/instruction/command'\"\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\n\nfunction getAttachment(senderID, url, fileType, message){\n  url = url.replace(/&/g, '%26');\n  var urlReq = \"https://project1-minhtri1296.c9users.io/test?url=\"+url+\"&type=\"+fileType+\"&userid=\"+senderID;\n  console.log(urlReq);\n  request({\n    uri: urlReq,\n    method: 'GET'\n  }, function(error, response, body) {\n      console.log(\"DONE!\");\n  })\n}\n\nfunction countAttachment(senderID){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(\"Attachments\");\n    collection.find({\"userid\": senderID}).count(function(err, result){\n      console.log(count);\n      var count = result;\n    });\n  })\n}\n\nfunction callSendAPI(messageData) {\n  request({\n    uri: 'https://graph.facebook.com/v2.6/me/messages',\n    qs: { access_token: process.env.PAGE_ACCESS_TOKEN },\n    method: 'POST',\n    json: messageData\n\n  }, function (error, response, body) {\n    if (!error && response.statusCode == 200) {\n      var recipientId = body.recipient_id;\n      var messageId = body.message_id;\n\n      //console.log(\"Successfully sent generic message with id %s to recipient %s\", messageId, recipientId);\n    } else {\n      console.error(\"Unable to send message.\");\n      console.error(response);\n      console.error(error);\n    }\n  });  \n}\n\n\n//Get the User Profile API\nfunction callUserProfileAPI(senderID, cb){\n  request({\n    uri: 'https://graph.facebook.com/v2.6/' + senderID + '?fields=first_name,last_name,timezone&access_token=' + process.env.PAGE_ACCESS_TOKEN,\n    method: 'GET'\n  }, function(error, response, body) {\n    if (!error && response.statusCode == 200) {\n      body = JSON.parse(body);\n      userName = body.first_name + \" \" + body.last_name;\n      console.log(\"Successfully sent generic message with the name \" + body.first_name + \" \" + body.last_name);\n      if(cb) cb(body);\n    } else {\n      console.error(\"Unable to send message.\");\n      //console.error(response);\n      //console.error(error);\n    }\n  });\n}\n\n\nfunction newReminder(senderID, messData){\n  var respondText;\n  getProperty(senderID, \"User\", \"counter\", function(counter){\n    getProperty(senderID, \"User\", \"reminder\", function(reminder){\n      getProperty(senderID, \"User\", \"timezone\", function(timezone){\n        console.log(counter);\n        if (counter == 0){\n          reminder.userid = senderID;\n          reminder.content = messData;\n          incrementCounter(senderID);\n          respondText = {\n                          text: \"When? (mm/dd/yy-hh:mm)\"\n                        };\n        }\n        else if (counter == 1){\n          var parts =  messData;\n          reminder.date = new Date(20+parts.substr(6,2),Number(parts.substr(0,2))-1,parts.substr(3,2), Number(parts.substr(9,2)),parts.substr(12,2));\n          var text = checkDate(reminder.date, parts, timezone);\n          if (text == \"Do you want add more information? (Y for yes, N for No)\") incrementCounter(senderID);\n          respondText = {\n                          text: text\n                        };\n        }\n        else if(counter == 2){\n          if(messData !== \"Y\" && messData !== \"N\"){\n            respondText = {\n                          text: \"Invalid character, type again (Y/N).\"\n                        };\n          }\n          else if(messData == \"N\"){\n            flipCreating(false, senderID);\n            reminder.date.setHours(reminder.date.getHours()-timezone);\n            addDB(\"Reminder\", reminder, senderID, function(doc){\n              var doc = doc.ops[0];\n              schedule.scheduleJob(doc.date, function(x){\n                MongoClient.connect(url1, function (err, db) {\n                  if (err) throw err\n                  var collection = db.collection(\"Reminder\");\n                  collection.find({\"_id\": ObjectId(doc._id)}).toArray(function(err, docs){\n                    if (err) throw err\n                    if(docs.length != 0){\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        message: {\n                          text: \"Here is something you need to do: \" + x.content\n                        }\n                      });\n                      collection.remove({\"_id\": ObjectId(doc._id)});\n                      db.close();\n                    }\n                  });\n                });\n              }.bind(null, doc));\n            });\n            respondText = {\n              text: \"Event added successfully!\"\n            };            \n            replaceCounter(0 ,senderID);\n            reminder = {};\n          }\n          else{\n            respondText = {\n                          text: \"What is the location? Type skip if none\"\n                        };  \n            incrementCounter(senderID);\n          }\n        }\n        else if(counter == 3){\n          if(messData != \"skip\") {\n            //reminder.location = messageText;\n            var places = getLocation(messData);\n            var long, lat;\n            var buttons = [];\n            for(var i=0; i<Math.min(3, places.length); i++){\n              var button = {type:\"postback\",\n                            title:places[i]['name'],\n                            payload: JSON.stringify(places[i])}\n              buttons.push(button);\n            }\n\n            respondText = {\n              attachment:{\n                type:\"template\",\n                payload:{\n                  template_type:\"button\",\n                  text:\"Choose a location: \",\n                  buttons: buttons\n                }\n              }\n            };  \n            //respondText.attachment.payload.buttons = buttons;\n\n            console.log(buttons);\n            callSendAPI({\n                      recipient: {\n                        id: senderID\n                      },\n                      \"message\":respondText\n                        \n          })\n            // console.log(typeof respondText.attachment.payload.buttons);\n            // console.log(respondText.attachment.payload.buttons);\n            // console.log(respondText);\n          }\n          else{\n          respondText = {\n                          text: \"Attach any files. Type skip of none\"\n                        };  \n            incrementCounter(senderID);\n          }\n          \n          \n          //respondText = \"Attach any files. Type skip of none\";\n          return;\n        }\n        else if (counter == 4){\n          console.log(reminder);\n          reminder.attachment = {url: \"\", type: \"\"}\n          if (messData[0].type){\n            getAttachment(senderID, messData[0].payload.url, messData[0].type, \"Attachment\");\n            //Later will check for total element in database files\n            reminder.attachment = {url: \"https://preview.c9users.io/minhtri1296/project1/file-upload/test.png\", type: messData[0].type};\n          }\n                    \n          //addDB(\"Reminder\", reminder, senderID);\n          respondText = {\n                          text: \"Finshed creating reminder.\"\n                        };            \n          flipCreating(false, senderID);\n          replaceCounter(0,senderID);\n          console.log(\"Success!\");\n          console.log(reminder);\n          reminder.date.setHours(reminder.date.getHours()-timezone);\n          addDB(\"Reminder\", reminder, senderID, function(doc){\n            var doc = doc.ops[0];\n            schedule.scheduleJob(reminder.date, function(x){\n              MongoClient.connect(url1, function (err, db) {\n                if (err) throw err\n                var collection = db.collection(\"Reminder\");\n                collection.find({\"_id\": ObjectId(doc._id)}).toArray(function(err, docs){\n                  if (err) throw err\n                  if(docs.length != 0){\n                    if (reminder.attachment){  \n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        \"message\":{\n                          \"attachment\":{\n                            \"type\": reminder.attachment.type,\n                            \"payload\":{\n                              \"url\": reminder.attachment.url\n                            }\n                          }\n                        }\n                      })\n                    }                    \n                    if(reminder.location){\n                      var location = JSON.parse(reminder.location);\n                      console.log(location);\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        message: {\n                          \"attachment\":{\n                            \"type\":\"template\",\n                            \"payload\":{\n                              \"template_type\":\"generic\",\n                              \"elements\":[\n                                 {\n                                  \"title\": location.name,\n                                   \"image_url\":\"https://maps.googleapis.com/maps/api/staticmap?center=\"+location.latitude+\",\"+location.longitude+\"&zoom=15&size=600x300&maptype=roadmap&markers=color:red|\"+location.latitude+\",\"+location.longitude,\n                                  \"subtitle\": \"Here is something you need to do at this location: \\\"\" + reminder.content + \"\\\"\",\n                                  \"buttons\":[\n                                    {\n                                      \"type\":\"web_url\",\n                                      \"url\":\"https://www.google.com/maps/place/\"+location.name+\"/@\"+location.latitude+\",\"+location.longitude,\n                                      \"title\":\"go to Google Map\"\n                                    }\n                                  ]      \n                                }\n                              ]\n                            }\n                          }\n                        }\n                      });\n                      collection.remove({\"_id\": ObjectId(doc._id)});\n                      db.close();\n                    }\n                    else{\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        message: {\n                          text: \"Here is something you need to do: \" + reminder.content\n                        }\n                      });\n                      collection.remove({\"_id\": ObjectId(doc._id)});\n                      db.close();\n                    }\n                  }\n                });\n              });\n            }.bind(null, doc));\n          });\n        }\n        var messageData = {\n          recipient: {\n            id: senderID\n          },\n          message: respondText\n        };\n        console.log(\"test\");\n        callSendAPI(messageData);\n        console.log(counter);\n        changeReminder(senderID, reminder);\n      });\n    });\n  });\n}\n\n\n// Set Express to listen out for HTTP requests\nvar server = app.listen(process.env.PORT || 3000, function () {\n  console.log(\"Listening on port %s\", server.address().port);\n});\n"
      ]
    },
    "mtime": 1520898426000
  },
  "{\"filename\":\"/app/dbUtil.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/dbUtil.js",
      "filenameRelative": "/app/dbUtil.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "dbUtil.js",
      "sourceFileName": "dbUtil.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "dbUtil"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nvar mongodb = require(\"mongodb\");\nvar MongoClient = mongodb.MongoClient;\nvar url1 = \"mongodb://tienanh2007:Dien1234@ds157040.mlab.com:57040/reminderbot\";\nexports.getSortedList = function (senderID, collectionName, cb) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(collectionName);\n    collection.find({ \"userid\": senderID }, { \"sort\": [\"date\"] }).toArray(function (err, docs) {\n      cb(docs);\n    });\n  });\n};\nexports.incrementCounter = function (senderID) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({ \"userid\": senderID }, { $inc: { \"counter\": 1 } });\n  });\n};\nexports.replaceCounter = function (value, senderID) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({ \"userid\": senderID }, { $set: { \"counter\": value } });\n  });\n};\nexports.flipCreating = function (value, senderID) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({ \"userid\": senderID }, { $set: { \"creating\": value } });\n  });\n};\n//Function for database (#database)\nexports.addDB = function (name, object, senderID, cb) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(name);\n    collection.insert(object, function (err, docs) {\n      if (err) console.log(err);\n      if (cb) cb(docs);\n      db.close();\n    });\n  });\n};\nexports.getDB = function (name, cb) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(name);\n    collection.find({}, { _id: 0 }).toArray(function (err, docs) {\n      db.close();\n      cb(docs);\n    });\n  });\n};\nexports.changeReminder = function (senderID, value) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({ \"userid\": senderID }, { $set: { \"reminder\": value } });\n  });\n};\nexports.getProperty = function (senderID, collectionName, property, cb) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(collectionName);\n    collection.findOne({ \"userid\": senderID }, function (err, ret) {\n      cb(ret[property]);\n    });\n  });\n};\nexports.getList = function (senderID, collectionName, cb) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(collectionName);\n    collection.find({ \"userid\": senderID }).toArray(function (err, docs) {\n      cb(docs);\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "dbUtil.js"
      ],
      "names": [
        "mongodb",
        "require",
        "MongoClient",
        "url1",
        "exports",
        "getSortedList",
        "senderID",
        "collectionName",
        "cb",
        "connect",
        "err",
        "db",
        "collection",
        "find",
        "toArray",
        "docs",
        "incrementCounter",
        "findOneAndUpdate",
        "$inc",
        "replaceCounter",
        "value",
        "$set",
        "flipCreating",
        "addDB",
        "name",
        "object",
        "insert",
        "console",
        "log",
        "close",
        "getDB",
        "_id",
        "changeReminder",
        "getProperty",
        "property",
        "findOne",
        "ret",
        "getList"
      ],
      "mappings": "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",
      "file": "dbUtil.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "const mongodb = require(\"mongodb\")\nvar MongoClient = mongodb.MongoClient\nvar url1 = \"mongodb://tienanh2007:Dien1234@ds157040.mlab.com:57040/reminderbot\";\nexports.getSortedList = function(senderID, collectionName, cb){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(collectionName);\n    collection.find({\"userid\": senderID}, {\"sort\":[\"date\"]}).toArray(function(err, docs){\n      cb(docs);\n    });\n  })\n}\nexports.incrementCounter = function(senderID){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({\"userid\":senderID},{$inc:{\"counter\":1}});\n  })\n}\nexports.replaceCounter = function(value, senderID){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({\"userid\":senderID},{$set:{\"counter\" : value}});\n  })\n}\nexports.flipCreating = function(value, senderID){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({\"userid\":senderID},{$set:{\"creating\" : value}});\n  })\n}\n//Function for database (#database)\nexports.addDB = function(name, object, senderID, cb){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(name);\n    collection.insert(object, function(err, docs){\n      if(err) console.log(err);\n      if(cb) cb(docs);\n      db.close();\n    });\n  })\n}\nexports.getDB = function(name, cb){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(name);\n    collection.find({},{_id:0}).toArray(function(err, docs) {\n      db.close();\n      cb(docs);\n    })\n  })\n}\nexports.changeReminder = function(senderID, value){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({\"userid\":senderID},{$set:{\"reminder\" : value}});\n  })\n}\nexports.getProperty = function(senderID, collectionName, property, cb){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(collectionName);\n    collection.findOne({\"userid\": senderID}, function(err, ret){\n      cb(ret[property]);\n    });\n  })\n}\nexports.getList = function(senderID, collectionName, cb){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(collectionName);\n    collection.find({\"userid\": senderID}).toArray(function(err, docs){\n      cb(docs);\n    });\n  })\n}"
      ]
    },
    "mtime": 1520898427000
  },
  "{\"filename\":\"/app/Util.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./dbUtil",
            "imported": [
              "getList",
              "getProperty",
              "getSortedList"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getList",
                "local": "getList"
              },
              {
                "kind": "named",
                "imported": "getProperty",
                "local": "getProperty"
              },
              {
                "kind": "named",
                "imported": "getSortedList",
                "local": "getSortedList"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/Util.js",
      "filenameRelative": "/app/Util.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "Util.js",
      "sourceFileName": "Util.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "Util"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _dbUtil = require('./dbUtil');\n\nvar sRequest = require('sync-request');\nexports.nextReminder = function (senderID, cb) {\n  (0, _dbUtil.getList)(senderID, \"Reminder\", function (list) {\n    if (list[0]) {\n      cb(list[0]);\n    } else cb(\"No Reminder\");\n  });\n};\nexports.list = function (senderID, cb) {\n  (0, _dbUtil.getProperty)(senderID, \"User\", \"timezone\", function (timezone) {\n    (0, _dbUtil.getSortedList)(senderID, \"Reminder\", function (list) {\n      var i = 1;\n      var str = \"\";\n      list.forEach(function (reminder) {\n        var day = reminder.date.getDate();\n        var month = reminder.date.getMonth() + 1;\n        var year = reminder.date.getFullYear();\n        var hour = reminder.date.getHours() + timezone;\n        var minute = reminder.date.getMinutes();\n        str += i + \". Content: \" + reminder.content + \"\\n   Date: \" + month + \"/\" + day + \"/\" + year + \" \" + hour + \":\" + minute + \"\\n   Location: \" + (reminder.location !== undefined ? JSON.parse(reminder.location).name : \"none\") + \"\\n\";\n        i++;\n      });\n      if (!str) str = \"No reminders\";\n      cb(str);\n    });\n  });\n};\nexports.containsObject = function (id, list) {\n  var i;\n  for (i = 0; i < list.length; i++) {\n    if (list[i].userid == id) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexports.checkDate = function (testDate, parts, timezone) {\n  var curDate = new Date();\n  testDate.setHours(testDate.getHours() - timezone);\n  var year = Number(20 + parts.substr(6, 2));\n  var month = Number(parts.substr(0, 2)) - 1;\n  var date = Number(parts.substr(3, 2));\n  var hour = Number(parts.substr(9, 2));\n  var minute = Number(parts.substr(12, 2));\n  if (curDate.getTime() > testDate.getTime()) return \"Invalid date! Please insert time in the future for your reminder\";\n  testDate.setHours(testDate.getHours() + timezone);\n  if (year != testDate.getFullYear() || month != testDate.getMonth() || date != testDate.getDate() || hour != testDate.getHours() || minute != testDate.getMinutes()) {\n    return \"Invalid date format! Please type again!\";\n  }\n  return \"Do you want add more information? (Y for yes, N for No)\";\n};\nexports.getLocation = function (location) {\n  var places = [];\n  var url = \"https://maps.googleapis.com/maps/api/place/textsearch/json?query=\" + location + \"&key=\" + process.env.GOOGLE_API_KEY;\n  var res = sRequest('GET', url, {\n    timeout: 10000\n  });\n  var data = JSON.parse(res.getBody('utf8'));\n\n  for (var i = 0; i < data.results.length; i++) {\n    var place = { \"name\": data.results[i][\"formatted_address\"],\n      \"latitude\": data.results[i][\"geometry\"][\"location\"][\"lat\"],\n      \"longitude\": data.results[i][\"geometry\"][\"location\"][\"lng\"]\n    };\n    //var messageId = body.message_id;\n    places.push(place);\n    //console.log(\"Successfully sent generic message with place \"+ place.name + \" longitude = \" + place.longitude);\n  }\n  return places;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlV0aWwuanMiXSwibmFtZXMiOlsic1JlcXVlc3QiLCJyZXF1aXJlIiwiZXhwb3J0cyIsIm5leHRSZW1pbmRlciIsInNlbmRlcklEIiwiY2IiLCJsaXN0IiwidGltZXpvbmUiLCJpIiwic3RyIiwiZm9yRWFjaCIsInJlbWluZGVyIiwiZGF5IiwiZGF0ZSIsImdldERhdGUiLCJtb250aCIsImdldE1vbnRoIiwieWVhciIsImdldEZ1bGxZZWFyIiwiaG91ciIsImdldEhvdXJzIiwibWludXRlIiwiZ2V0TWludXRlcyIsImNvbnRlbnQiLCJsb2NhdGlvbiIsInVuZGVmaW5lZCIsIkpTT04iLCJwYXJzZSIsIm5hbWUiLCJjb250YWluc09iamVjdCIsImlkIiwibGVuZ3RoIiwidXNlcmlkIiwiY2hlY2tEYXRlIiwidGVzdERhdGUiLCJwYXJ0cyIsImN1ckRhdGUiLCJEYXRlIiwic2V0SG91cnMiLCJOdW1iZXIiLCJzdWJzdHIiLCJnZXRUaW1lIiwiZ2V0TG9jYXRpb24iLCJwbGFjZXMiLCJ1cmwiLCJwcm9jZXNzIiwiZW52IiwiR09PR0xFX0FQSV9LRVkiLCJyZXMiLCJ0aW1lb3V0IiwiZGF0YSIsImdldEJvZHkiLCJyZXN1bHRzIiwicGxhY2UiLCJwdXNoIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBLElBQU1BLFdBQVdDLFFBQVEsY0FBUixDQUFqQjtBQUNBQyxRQUFRQyxZQUFSLEdBQXVCLFVBQVNDLFFBQVQsRUFBbUJDLEVBQW5CLEVBQXNCO0FBQzNDLHVCQUFRRCxRQUFSLEVBQWtCLFVBQWxCLEVBQThCLFVBQVNFLElBQVQsRUFBYztBQUMxQyxRQUFHQSxLQUFLLENBQUwsQ0FBSCxFQUFXO0FBQ1RELFNBQUdDLEtBQUssQ0FBTCxDQUFIO0FBQ0QsS0FGRCxNQUdLRCxHQUFHLGFBQUg7QUFDTixHQUxEO0FBTUQsQ0FQRDtBQVFBSCxRQUFRSSxJQUFSLEdBQWUsVUFBU0YsUUFBVCxFQUFtQkMsRUFBbkIsRUFBc0I7QUFDbkMsMkJBQVlELFFBQVosRUFBc0Is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M0gsRUFBaUo7QUFDakosV0FBTyx5Q0FBUDtBQUNDO0FBQ0QsU0FBTyx5REFBUDtBQUNELENBZEQ7QUFlQXBCLFFBQVF3QyxXQUFSLEdBQXNCLFVBQVNsQixRQUFULEVBQWtCO0FBQ3RDLE1BQUltQixTQUFTLEVBQWI7QUFDQSxNQUFJQyxNQUFNLHNFQUFzRXBCLFFBQXRFLEdBQWlGLE9BQWpGLEdBQTJGcUIsUUFBUUMsR0FBUixDQUFZQyxjQUFqSDtBQUNBLE1BQUlDLE1BQU1oRCxTQUFTLEtBQVQsRUFBZ0I0QyxHQUFoQixFQUFxQjtBQUNyQkssYUFBUztBQURZLEdBQXJCLENBQVY7QUFHQSxNQUFJQyxPQUFReEIsS0FBS0MsS0FBTCxDQUFXcUIsSUFBSUcsT0FBSixDQUFZLE1BQVosQ0FBWCxDQUFaOztBQUVBLE9BQUssSUFBSTNDLElBQUksQ0FBYixFQUFnQkEsSUFBSTBDLEtBQUtFLE9BQUwsQ0FBYXJCLE1BQWpDLEVBQXlDdkIsR0FBekMsRUFBNkM7QUFDM0MsUUFBSTZDLFFBQVEsRUFBQyxRQUFRSCxLQUFLRSxPQUFMLENBQWE1QyxDQUFiLEVBQWdCLG1CQUFoQixDQUFUO0FBQ0Esa0JBQVkwQyxLQUFLRSxPQUFMLENBQWE1QyxDQUFiLEVBQWdCLFVBQWhCLEVBQTRCLFVBQTVCLEVBQXdDLEtBQXhDLENBRFo7QUFFQSxtQkFBYTBDLEtBQUtFLE9BQUwsQ0FBYTVDLENBQWIsRUFBZ0IsVUFBaEIsRUFBNEIsVUFBNUIsRUFBd0MsS0FBeEM7QUFGYixLQUFaO0FBSUE7QUFDQW1DLFdBQU9XLElBQVAsQ0FBWUQsS0FBWjtBQUNBO0FBQ0Q7QUFDRCxTQUFPVixNQUFQO0FBQ0QsQ0FsQkQiLCJmaWxlIjoiVXRpbC5qcyIsInNvdXJjZVJvb3QiOiIvYXBwIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtnZXRMaXN0LCBnZXRQcm9wZXJ0eSwgZ2V0U29ydGVkTGlzdH0gZnJvbSAnLi9kYlV0aWwnO1xuY29uc3Qgc1JlcXVlc3QgPSByZXF1aXJlKCdzeW5jLXJlcXVlc3QnKTtcbmV4cG9ydHMubmV4dFJlbWluZGVyID0gZnVuY3Rpb24oc2VuZGVySUQsIGNiKXtcbiAgZ2V0TGlzdChzZW5kZXJJRCwgXCJSZW1pbmRlclwiLCBmdW5jdGlvbihsaXN0KXtcbiAgICBpZihsaXN0WzBdKXtcbiAgICAgIGNiKGxpc3RbMF0pO1xuICAgIH0gXG4gICAgZWxzZSBjYihcIk5vIFJlbWluZGVyXCIpO1xuICB9KTtcbn1cbmV4cG9ydHMubGlzdCA9IGZ1bmN0aW9uKHNlbmRlcklELCBjYil7XG4gIGdldFByb3BlcnR5KHNlbmRlcklELCBcIlVzZXJcIiwgXCJ0aW1lem9uZVwiLCBmdW5jdGlvbih0aW1lem9uZSl7XG4gICAgZ2V0U29ydGVkTGlzdChzZW5kZXJJRCwgXCJSZW1pbmRlclwiLCBmdW5jdGlvbihsaXN0KXtcbiAgICAgIHZhciBpID0gMTtcbiAgICAgIHZhciBzdHIgPSBcIlwiO1xuICAgICAgbGlzdC5mb3JFYWNoKGZ1bmN0aW9uKHJlbWluZGVyKXtcbiAgICAgICAgdmFyIGRheSA9IHJlbWluZGVyLmRhdGUuZ2V0RGF0ZSgpO1xuICAgICAgICB2YXIgbW9udGggPSByZW1pbmRlci5kYXRlLmdldE1vbnRoKCkgKyAxO1xuICAgICAgICB2YXIgeWVhciA9IHJlbWluZGVyLmRhdGUuZ2V0RnVsbFllYXIoKTtcbiAgICAgICAgdmFyIGhvdXIgPSByZW1pbmRlci5kYXRlLmdldEhvdXJzKCkrdGltZXpvbmU7XG4gICAgICAgIHZhciBtaW51dGUgPSByZW1pbmRlci5kYXRlLmdldE1pbnV0ZXMoKTtcbiAgICAgICAgc3RyICs9IGkgKyBcIi4gQ29udGVudDogXCIgKyByZW1pbmRlci5jb250ZW50ICsgXCJcXG4gICBEYXRlOiBcIiArIG1vbnRoICsgXCIvXCIgKyBkYXkgKyBcIi9cIiArIHllYXIgXG4gICAgICAgICAgKyBcIiBcIiArIGhvdXIgKyBcIjpcIiArIG1pbnV0ZSArIFwiXFxuICAgTG9jYXRpb246IFwiICsgKHJlbWluZGVyLmxvY2F0aW9uICE9PSB1bmRlZmluZWQgPyBKU09OLnBhcnNlKHJlbWluZGVyLmxvY2F0aW9uKS5uYW1lIDogXCJub25lXCIpKyBcIlxcblwiO1xuICAgICAgICBpKys7XG4gICAgICB9KTtcbiAgICAgIGlmKCFzdHIpIHN0ciA9IFwiTm8gcmVtaW5kZXJzXCI7XG4gICAgICBjYihzdHIpO1xuICAgIH0pO1xuICB9KTtcbn1cbmV4cG9ydHMuY29udGFpbnNPYmplY3QgPSBmdW5jdGlvbihpZCwgbGlzdCkge1xuICAgIHZhciBpO1xuICAgIGZvciAoaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChsaXN0W2ldLnVzZXJpZCA9PSBpZCkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG59XG5cblxuZXhwb3J0cy5jaGVja0RhdGUgPSBmdW5jdGlvbih0ZXN0RGF0ZSwgcGFydHMsIHRpbWV6b25lKXtcbiAgdmFyIGN1ckRhdGUgPSBuZXcgRGF0ZSgpO1xuICB0ZXN0RGF0ZS5zZXRIb3Vycyh0ZXN0RGF0ZS5nZXRIb3VycygpLXRpbWV6b25lKTtcbiAgdmFyIHllYXIgPSBOdW1iZXIoMjArcGFydHMuc3Vic3RyKDYsMikpO1xuICB2YXIgbW9udGggPSBOdW1iZXIocGFydHMuc3Vic3RyKDAsMikpLTE7XG4gIHZhciBkYXRlID0gTnVtYmVyKHBhcnRzLnN1YnN0cigzLDIpKTtcbiAgdmFyIGhvdXIgPSBOdW1iZXIocGFydHMuc3Vic3RyKDksMikpO1xuICB2YXIgbWludXRlID0gTnVtYmVyKHBhcnRzLnN1YnN0cigxMiwyKSk7XG4gIGlmIChjdXJEYXRlLmdldFRpbWUoKT50ZXN0RGF0ZS5nZXRUaW1lKCkpIHJldHVybiBcIkludmFsaWQgZGF0ZSEgUGxlYXNlIGluc2VydCB0aW1lIGluIHRoZSBmdXR1cmUgZm9yIHlvdXIgcmVtaW5kZXJcIjtcbiAgdGVzdERhdGUuc2V0SG91cnModGVzdERhdGUuZ2V0SG91cnMoKSt0aW1lem9uZSk7XG4gIGlmICh5ZWFyIT10ZXN0RGF0ZS5nZXRGdWxsWWVhcigpfHxtb250aCE9dGVzdERhdGUuZ2V0TW9udGgoKXx8ZGF0ZSE9dGVzdERhdGUuZ2V0RGF0ZSgpfHxob3VyIT10ZXN0RGF0ZS5nZXRIb3VycygpfHxtaW51dGUhPXRlc3REYXRlLmdldE1pbnV0ZXMoKSl7XG4gIHJldHVybiBcIkludmFsaWQgZGF0ZSBmb3JtYXQhIFBsZWFzZSB0eXBlIGFnYWluIVwiO1xuICB9XG4gIHJldHVybiBcIkRvIHlvdSB3YW50IGFkZCBtb3JlIGluZm9ybWF0aW9uPyAoWSBmb3IgeWVzLCBOIGZvciBObylcIjtcbn1cbmV4cG9ydHMuZ2V0TG9jYXRpb24gPSBmdW5jdGlvbihsb2NhdGlvbil7XG4gIHZhciBwbGFjZXMgPSBbXTtcbiAgdmFyIHVybCA9IFwiaHR0cHM6Ly9tYXBzLmdvb2dsZWFwaXMuY29tL21hcHMvYXBpL3BsYWNlL3RleHRzZWFyY2gvanNvbj9xdWVyeT1cIiArIGxvY2F0aW9uICsgXCIma2V5PVwiICsgcHJvY2Vzcy5lbnYuR09PR0xFX0FQSV9LRVk7XG4gIHZhciByZXMgPSBzUmVxdWVzdCgnR0VUJywgdXJsLCB7XG4gICAgICAgICAgICB0aW1lb3V0OiAxMDAwMCAgXG4gICAgICAgIH0pO1xuICB2YXIgZGF0YSA9ICBKU09OLnBhcnNlKHJlcy5nZXRCb2R5KCd1dGY4JykpO1xuICBcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLnJlc3VsdHMubGVuZ3RoOyBpKyspe1xuICAgIHZhciBwbGFjZSA9IHtcIm5hbWVcIjogZGF0YS5yZXN1bHRzW2ldW1wiZm9ybWF0dGVkX2FkZHJlc3NcIl0sIFxuICAgICAgICAgICAgICAgIFwibGF0aXR1ZGVcIjogZGF0YS5yZXN1bHRzW2ldW1wiZ2VvbWV0cnlcIl1bXCJsb2NhdGlvblwiXVtcImxhdFwiXSxcbiAgICAgICAgICAgICAgICBcImxvbmdpdHVkZVwiOiBkYXRhLnJlc3VsdHNbaV1bXCJnZW9tZXRyeVwiXVtcImxvY2F0aW9uXCJdW1wibG5nXCJdXG4gICAgICAgICAgICAgICAgfTtcbiAgICAvL3ZhciBtZXNzYWdlSWQgPSBib2R5Lm1lc3NhZ2VfaWQ7XG4gICAgcGxhY2VzLnB1c2gocGxhY2UpO1xuICAgIC8vY29uc29sZS5sb2coXCJTdWNjZXNzZnVsbHkgc2VudCBnZW5lcmljIG1lc3NhZ2Ugd2l0aCBwbGFjZSBcIisgcGxhY2UubmFtZSArIFwiIGxvbmdpdHVkZSA9IFwiICsgcGxhY2UubG9uZ2l0dWRlKTtcbiAgfSAgXG4gIHJldHVybiBwbGFjZXM7XG59Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "Util.js"
      ],
      "names": [
        "sRequest",
        "require",
        "exports",
        "nextReminder",
        "senderID",
        "cb",
        "list",
        "timezone",
        "i",
        "str",
        "forEach",
        "reminder",
        "day",
        "date",
        "getDate",
        "month",
        "getMonth",
        "year",
        "getFullYear",
        "hour",
        "getHours",
        "minute",
        "getMinutes",
        "content",
        "location",
        "undefined",
        "JSON",
        "parse",
        "name",
        "containsObject",
        "id",
        "length",
        "userid",
        "checkDate",
        "testDate",
        "parts",
        "curDate",
        "Date",
        "setHours",
        "Number",
        "substr",
        "getTime",
        "getLocation",
        "places",
        "url",
        "process",
        "env",
        "GOOGLE_API_KEY",
        "res",
        "timeout",
        "data",
        "getBody",
        "results",
        "place",
        "push"
      ],
      "mappings": "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",
      "file": "Util.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "import {getList, getProperty, getSortedList} from './dbUtil';\nconst sRequest = require('sync-request');\nexports.nextReminder = function(senderID, cb){\n  getList(senderID, \"Reminder\", function(list){\n    if(list[0]){\n      cb(list[0]);\n    } \n    else cb(\"No Reminder\");\n  });\n}\nexports.list = function(senderID, cb){\n  getProperty(senderID, \"User\", \"timezone\", function(timezone){\n    getSortedList(senderID, \"Reminder\", function(list){\n      var i = 1;\n      var str = \"\";\n      list.forEach(function(reminder){\n        var day = reminder.date.getDate();\n        var month = reminder.date.getMonth() + 1;\n        var year = reminder.date.getFullYear();\n        var hour = reminder.date.getHours()+timezone;\n        var minute = reminder.date.getMinutes();\n        str += i + \". Content: \" + reminder.content + \"\\n   Date: \" + month + \"/\" + day + \"/\" + year \n          + \" \" + hour + \":\" + minute + \"\\n   Location: \" + (reminder.location !== undefined ? JSON.parse(reminder.location).name : \"none\")+ \"\\n\";\n        i++;\n      });\n      if(!str) str = \"No reminders\";\n      cb(str);\n    });\n  });\n}\nexports.containsObject = function(id, list) {\n    var i;\n    for (i = 0; i < list.length; i++) {\n        if (list[i].userid == id) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n\nexports.checkDate = function(testDate, parts, timezone){\n  var curDate = new Date();\n  testDate.setHours(testDate.getHours()-timezone);\n  var year = Number(20+parts.substr(6,2));\n  var month = Number(parts.substr(0,2))-1;\n  var date = Number(parts.substr(3,2));\n  var hour = Number(parts.substr(9,2));\n  var minute = Number(parts.substr(12,2));\n  if (curDate.getTime()>testDate.getTime()) return \"Invalid date! Please insert time in the future for your reminder\";\n  testDate.setHours(testDate.getHours()+timezone);\n  if (year!=testDate.getFullYear()||month!=testDate.getMonth()||date!=testDate.getDate()||hour!=testDate.getHours()||minute!=testDate.getMinutes()){\n  return \"Invalid date format! Please type again!\";\n  }\n  return \"Do you want add more information? (Y for yes, N for No)\";\n}\nexports.getLocation = function(location){\n  var places = [];\n  var url = \"https://maps.googleapis.com/maps/api/place/textsearch/json?query=\" + location + \"&key=\" + process.env.GOOGLE_API_KEY;\n  var res = sRequest('GET', url, {\n            timeout: 10000  \n        });\n  var data =  JSON.parse(res.getBody('utf8'));\n  \n  for (var i = 0; i < data.results.length; i++){\n    var place = {\"name\": data.results[i][\"formatted_address\"], \n                \"latitude\": data.results[i][\"geometry\"][\"location\"][\"lat\"],\n                \"longitude\": data.results[i][\"geometry\"][\"location\"][\"lng\"]\n                };\n    //var messageId = body.message_id;\n    places.push(place);\n    //console.log(\"Successfully sent generic message with place \"+ place.name + \" longitude = \" + place.longitude);\n  }  \n  return places;\n}"
      ]
    },
    "mtime": 1520898426000
  },
  "{\"filename\":\"/app/server.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server.js",
      "filenameRelative": "/app/server.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "server.js",
      "sourceFileName": "server.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "server"
    },
    "ignored": false,
    "code": "'use strict';\n\nrequire('babel-register');\nrequire('./bot.js');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxRQUFRLGdCQUFSO0FBQ0FBLFFBQVEsVUFBUiIsImZpbGUiOiJzZXJ2ZXIuanMiLCJzb3VyY2VSb290IjoiL2FwcCIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJ2JhYmVsLXJlZ2lzdGVyJyk7ICBcbnJlcXVpcmUoJy4vYm90LmpzJyk7ICAiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "require"
      ],
      "mappings": ";;AAAAA,QAAQ,gBAAR;AACAA,QAAQ,UAAR",
      "file": "server.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "require('babel-register');  \nrequire('./bot.js');  "
      ]
    },
    "mtime": 1520898427000
  },
  "{\"filename\":\"/app/bot.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./dbUtil",
            "imported": [
              "getSortedList",
              "incrementCounter",
              "replaceCounter",
              "flipCreating",
              "addDB",
              "getDB",
              "changeReminder",
              "getProperty",
              "getList"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getSortedList",
                "local": "getSortedList"
              },
              {
                "kind": "named",
                "imported": "incrementCounter",
                "local": "incrementCounter"
              },
              {
                "kind": "named",
                "imported": "replaceCounter",
                "local": "replaceCounter"
              },
              {
                "kind": "named",
                "imported": "flipCreating",
                "local": "flipCreating"
              },
              {
                "kind": "named",
                "imported": "addDB",
                "local": "addDB"
              },
              {
                "kind": "named",
                "imported": "getDB",
                "local": "getDB"
              },
              {
                "kind": "named",
                "imported": "changeReminder",
                "local": "changeReminder"
              },
              {
                "kind": "named",
                "imported": "getProperty",
                "local": "getProperty"
              },
              {
                "kind": "named",
                "imported": "getList",
                "local": "getList"
              }
            ]
          },
          {
            "source": "./Util.js",
            "imported": [
              "nextReminder",
              "checkDate",
              "containsObject",
              "list",
              "getLocation"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "nextReminder",
                "local": "nextReminder"
              },
              {
                "kind": "named",
                "imported": "checkDate",
                "local": "checkDate"
              },
              {
                "kind": "named",
                "imported": "containsObject",
                "local": "containsObject"
              },
              {
                "kind": "named",
                "imported": "list",
                "local": "list"
              },
              {
                "kind": "named",
                "imported": "getLocation",
                "local": "getLocation"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot.js",
      "filenameRelative": "/app/bot.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "bot.js",
      "sourceFileName": "bot.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "bot"
    },
    "ignored": false,
    "code": "//\n// This is main file containing code implementing the Express server and functionality for the Express echo bot.\n//\n'use strict';\n\nvar _dbUtil = require('./dbUtil');\n\nvar _Util = require('./Util.js');\n\nvar ObjectId = require('mongodb').ObjectID;\nvar schedule = require('node-schedule');\nvar watson = require('watson-developer-cloud');\nvar mongodb = require(\"mongodb\");\nvar express = require('express');\nvar bodyParser = require('body-parser');\nvar request = require('request');\nvar path = require('path');\n\nvar http = require('https');\nvar fs = require('fs');\n\nvar messengerButton = \"<html><head><title>Facebook Messenger Bot</title></head><body><h1>Facebook Messenger Bot</h1>This is a bot based on Messenger Platform QuickStart. For more details, see their <a href=\\\"https://developers.facebook.com/docs/messenger-platform/guides/quick-start\\\">docs</a>.<footer id=\\\"gWidget\\\"></footer><script src=\\\"https://widget.glitch.me/widget.min.js\\\"></script></body></html>\";\n//User's data\nvar userName = \"test\";\n// Watson data\nvar conversation = watson.conversation({\n  username: 'a162acb8-d510-4c1e-8e81-aa514ee3b769',\n  password: 'kWC4xmdWiQ8Z',\n  version: 'v1',\n  version_date: '2017-02-03'\n});\nvar context = {};\n// The rest of the code implements the routes for our Express server.\nvar app = express();\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\n// database config\nvar MongoClient = mongodb.MongoClient;\nvar url1 = \"mongodb://tienanh2007:Dien1234@ds157040.mlab.com:57040/reminderbot\";\n// Webhook validation\napp.get('/webhook', function (req, res) {\n  if (req.query['hub.mode'] === 'subscribe' && req.query['hub.verify_token'] === process.env.VERIFY_TOKEN) {\n    console.log(\"Validating webhook\");\n    res.status(200).send(req.query['hub.challenge']);\n  } else {\n    console.error(\"Failed validation. Make sure the validation tokens match.\");\n    res.sendStatus(403);\n  }\n});\n\n// Display the web page\napp.get('/', function (req, res) {\n  res.writeHead(200, { 'Content-Type': 'text/html' });\n  res.write(messengerButton);\n  res.end();\n});\n\n// Message processing\napp.post('/webhook', function (req, res) {\n  var data = req.body;\n  if (data.object === 'page') {\n    // Iterate over each entry - there may be multiple if batched\n    data.entry.forEach(function (entry) {\n      var pageID = entry.id;\n      var timeOfEvent = entry.time;\n      // Iterate over each messaging event\n      entry.messaging.forEach(function (event) {\n        callUserProfileAPI(event.sender.id, function (body) {\n          var userData = { userid: event.sender.id, counter: 0, keywords: [], creating: false, reminder: {}, timezone: body.timezone };\n          (0, _dbUtil.getDB)(\"User\", function (collection) {\n            if (!(0, _Util.containsObject)(event.sender.id, collection)) {\n              (0, _dbUtil.addDB)(\"User\", userData, event.sender.id);\n            }\n            if (event.message) {\n              receivedMessage(event);\n            } else if (event.postback) {\n              receivedPostback(event);\n            } else {\n              console.log(\"Webhook received unknown event: \", event);\n            }\n          });\n        });\n      });\n    });\n\n    // Assume all went well.\n    //\n    // You must send back a 200, within 20 seconds, to let us know\n    // you've successfully received the callback. Otherwise, the request\n    // will time out and we will keep trying to resend.\n    res.sendStatus(200);\n  }\n});\n\nfunction receivedMessage(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var timeOfMessage = event.timestamp;\n  var message = event.message;\n\n  console.log(\"Received message for user %d and page %d at %d with message:\", senderID, recipientID, timeOfMessage);\n\n  var messageId = message.mid;\n\n  var messageText = message.text;\n  var messageAttachments = message.attachments;\n\n  if (messageText) {\n    (0, _dbUtil.getProperty)(senderID, \"User\", \"creating\", function (p) {\n      if (p) newReminder(senderID, messageText);else {\n        switch (messageText) {\n          //Cases where the text doesn't have to go through BlueMix API (Nothing right now)\n          // case 'generic':\n          //   sendGenericMessage(senderID);\n          //   break;\n          default:\n            sendTextMessage(senderID, messageText);\n        }\n      }\n    });\n  }\n  if (messageAttachments) {\n    (0, _dbUtil.getProperty)(senderID, \"User\", \"creating\", function (p) {\n      if (p) newReminder(senderID, messageAttachments);else getAttachment(senderID, messageAttachments[0].payload.url, messageAttachments[0].type, \"Attachment\");\n    });\n  }\n}\n\nfunction receivedPostback(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var timeOfPostback = event.timestamp;\n\n  // The 'payload' param is a developer-defined field which is set in a postback \n  // button for Structured Messages. \n  var payload = event.postback.payload;\n\n  console.log(\"Received postback for user %d and page %d with payload '%s' \" + \"at %d\", senderID, recipientID, payload, timeOfPostback);\n\n  // When a postback is called, we'll send a message back to the sender to \n  // let them know it was successful\n\n  //Do Something after users clicked Get Started button \n  if (event.postback.payload === \"GET_STARTED_PAYLOAD\") {\n    callUserProfileAPI(senderID, function (body) {\n      console.log(body);\n      var name = body.fist_name + \" \" + body.fist_name;\n      sendWelcomeMessage(senderID, userName);\n    });\n  } else {\n    (0, _dbUtil.getProperty)(senderID, \"User\", \"reminder\", function (reminder) {\n      console.log(reminder);\n      reminder.location = payload;\n      var data = JSON.parse(payload);\n      //console.log(payload);\n      var messageData = {\n        recipient: {\n          id: senderID\n        },\n        message: {\n          text: \"Attach any files. Type skip if none\"\n        }\n      };\n      (0, _dbUtil.changeReminder)(senderID, reminder);\n      (0, _dbUtil.incrementCounter)(senderID);\n      callSendAPI(messageData);\n    });\n  }\n}\n\n//////////////////////////\n// Sending helpers\n//////////////////////////\nfunction sendTextMessage(senderID, messageText) {\n  conversation.message({\n    workspace_id: '1e7573f5-939d-47e3-8690-5ef1c0946b63',\n    input: { 'text': messageText },\n    context: context\n  }, function (err, response) {\n    if (err) console.log('error:', err);else {\n\n      var messageData;\n      if (response.intents[0]) {\n        var command = response.intents[0].intent;\n        var respond = \"\";\n        switch (command) {\n          case 'list':\n            (0, _Util.list)(senderID, function (str) {\n              callSendAPI({\n                recipient: {\n                  id: senderID\n                },\n                message: {\n                  text: str\n                }\n              });\n            });\n            break;\n          case 'next':\n            (0, _Util.nextReminder)(senderID, function (str) {\n              var options = { weekday: \"long\", year: \"numeric\", month: \"short\",\n                day: \"numeric\" };\n              callSendAPI({\n                recipient: {\n                  id: senderID\n                },\n                message: {\n                  text: \"Here is something you need to do: \" + str.content + \" after \" + str.date.toLocaleTimeString(\"en-US\", options)\n                }\n              });\n            });\n            break;\n          case 'create':\n            respond = \"What do you want to remind about?\";\n            (0, _dbUtil.flipCreating)(true, senderID);\n            break;\n          case 'help':\n            sendHelpMessage(senderID);\n            break;\n          case 'delete':\n            (0, _dbUtil.getSortedList)(senderID, \"Reminder\", function (list) {\n              var index = Number(messageText.substr(messageText.length - 1, 1)) - 1;\n              if (index >= 0 && index < list.length) {\n                var id = list[index]._id;\n                MongoClient.connect(url1, function (err, db) {\n                  if (err) throw err;\n                  var collection = db.collection(\"Reminder\");\n                  collection.remove({ \"_id\": ObjectId(id) }, function (err, doc) {\n                    callSendAPI({\n                      recipient: {\n                        id: senderID\n                      },\n                      message: {\n                        text: \"deleted \" + list[index].content\n                      }\n                    });\n                  });\n                });\n              }\n            });\n            break;\n          case 'hi':\n            respond = \"Hello\";\n            break;\n          case 'thx':\n            respond = \"You're welcome\";\n            break;\n          case 'bye':\n            respond = \"Good bye!\";\n            break;\n          case 'who':\n            respond = \"My name is Bob\";\n            break;\n          default:\n            respond = command;\n        };\n        messageData = {\n          recipient: {\n            id: senderID\n          },\n          message: {\n            text: respond\n          }\n        };\n      } else {\n        var funnyQuotes = ['\"How do you get a sweet little 80-year-old lady to say the F word? Get another sweet little 80-year-old lady to yell \"BINGO!\" - Anonymous', 'Knowledge is knowing a tomato is a fruit; wisdom is not putting it in a fruit salad. - Miles Kington', 'By all means, marry. If you get a good wife, you’ll become happy; if you get a bad one, you’ll become a philosopher. - Socrates', 'The best way to lie is to tell the truth . . . carefully edited truth. - Anonymous', 'If you steal from one author, it’s plagiarism; if you steal from many, it’s research. - Wilson Mizner', 'If evolution really works, how come mothers only have two hands? - Milton Berle'];\n        var i = Math.floor(Math.random() * 6);\n        messageData = {\n          recipient: {\n            id: senderID\n          },\n          message: {\n            text: funnyQuotes[i] + \"\\nSorry for not understanding you. But above is a funny quote\"\n          }\n        };\n      }\n      if (messageData.message.text) callSendAPI(messageData);\n    }\n  });\n}\n\nfunction sendWelcomeMessage(senderId, name) {\n  var messageData = {\n    recipient: {\n      id: senderId\n    },\n    message: {\n      text: \"Welcome aboard \" + name + \"! My name is Bob. Right now I'm gonna walk you through the basic steps.\\n\" + \"To talk to me, you don't have to say exact commands everytime. For example:\\n\" + \"- Set up new reminders: 'I want to make/create/have new reminder'\\n\" + \"- Retrieve the next reminder: 'I want to see the next/upcoming/following reminder'\\n\" + \"- Retrieve the list of reminders: 'I want to list/show/get all reminders'\\nand many more...\"\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\n//Send the message when the user use 'help' command\nfunction sendHelpMessage(senderId) {\n  var messageData = {\n    recipient: {\n      id: senderId\n    },\n    message: {\n      text: \"- Set up new reminders: 'I want to make/create/have new reminder'\\n\" + \"- Retrieve the next reminder: 'I want to see the next/upcoming/following reminder'\\n\" + \"- Retrieve the list of reminders: 'I want to list/show/get all reminders'\\n\" + \"- Delete a reminder: 'I want to remove/delete/destroy' [index] (index is the index number of the reminder in the list of reminders)\\n\" + \"- Help: 'help/instruction/command'\"\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\nfunction getAttachment(senderID, url, fileType, message) {\n  url = url.replace(/&/g, '%26');\n  var urlReq = \"https://project1-minhtri1296.c9users.io/test?url=\" + url + \"&type=\" + fileType + \"&userid=\" + senderID;\n  console.log(urlReq);\n  request({\n    uri: urlReq,\n    method: 'GET'\n  }, function (error, response, body) {\n    console.log(\"DONE!\");\n  });\n}\n\nfunction countAttachment(senderID) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(\"Attachments\");\n    collection.find({ \"userid\": senderID }).count(function (err, result) {\n      console.log(count);\n      var count = result;\n    });\n  });\n}\n\nfunction callSendAPI(messageData) {\n  request({\n    uri: 'https://graph.facebook.com/v2.6/me/messages',\n    qs: { access_token: process.env.PAGE_ACCESS_TOKEN },\n    method: 'POST',\n    json: messageData\n\n  }, function (error, response, body) {\n    if (!error && response.statusCode == 200) {\n      var recipientId = body.recipient_id;\n      var messageId = body.message_id;\n\n      //console.log(\"Successfully sent generic message with id %s to recipient %s\", messageId, recipientId);\n    } else {\n      console.error(\"Unable to send message.\");\n      console.error(response);\n      console.error(error);\n    }\n  });\n}\n\n//Get the User Profile API\nfunction callUserProfileAPI(senderID, cb) {\n  request({\n    uri: 'https://graph.facebook.com/v2.6/' + senderID + '?fields=first_name,last_name,timezone&access_token=' + process.env.PAGE_ACCESS_TOKEN,\n    method: 'GET'\n  }, function (error, response, body) {\n    if (!error && response.statusCode == 200) {\n      body = JSON.parse(body);\n      userName = body.first_name + \" \" + body.last_name;\n      console.log(\"Successfully sent generic message with the name \" + body.first_name + \" \" + body.last_name);\n      if (cb) cb(body);\n    } else {\n      console.error(\"Unable to send message.\");\n      //console.error(response);\n      //console.error(error);\n    }\n  });\n}\n\nfunction newReminder(senderID, messData) {\n  var respondText;\n  (0, _dbUtil.getProperty)(senderID, \"User\", \"counter\", function (counter) {\n    (0, _dbUtil.getProperty)(senderID, \"User\", \"reminder\", function (reminder) {\n      (0, _dbUtil.getProperty)(senderID, \"User\", \"timezone\", function (timezone) {\n        console.log(counter);\n        if (counter == 0) {\n          reminder.userid = senderID;\n          reminder.content = messData;\n          (0, _dbUtil.incrementCounter)(senderID);\n          respondText = {\n            text: \"When? (mm/dd/yy-hh:mm)\"\n          };\n        } else if (counter == 1) {\n          var parts = messData;\n          reminder.date = new Date(20 + parts.substr(6, 2), Number(parts.substr(0, 2)) - 1, parts.substr(3, 2), Number(parts.substr(9, 2)), parts.substr(12, 2));\n          var text = (0, _Util.checkDate)(reminder.date, parts, timezone);\n          if (text == \"Do you want add more information? (Y for yes, N for No)\") (0, _dbUtil.incrementCounter)(senderID);\n          respondText = {\n            text: text\n          };\n        } else if (counter == 2) {\n          if (messData !== \"Y\" && messData !== \"N\") {\n            respondText = {\n              text: \"Invalid character, type again (Y/N).\"\n            };\n          } else if (messData == \"N\") {\n            (0, _dbUtil.flipCreating)(false, senderID);\n            reminder.date.setHours(reminder.date.getHours() - timezone);\n            (0, _dbUtil.addDB)(\"Reminder\", reminder, senderID, function (doc) {\n              var doc = doc.ops[0];\n              schedule.scheduleJob(doc.date, function (x) {\n                MongoClient.connect(url1, function (err, db) {\n                  if (err) throw err;\n                  var collection = db.collection(\"Reminder\");\n                  collection.find({ \"_id\": ObjectId(doc._id) }).toArray(function (err, docs) {\n                    if (err) throw err;\n                    if (docs.length != 0) {\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        message: {\n                          text: \"Here is something you need to do: \" + x.content\n                        }\n                      });\n                      collection.remove({ \"_id\": ObjectId(doc._id) });\n                      db.close();\n                    }\n                  });\n                });\n              }.bind(null, doc));\n            });\n            respondText = {\n              text: \"Event added successfully!\"\n            };\n            (0, _dbUtil.replaceCounter)(0, senderID);\n            reminder = {};\n          } else {\n            respondText = {\n              text: \"What is the location? Type skip if none\"\n            };\n            (0, _dbUtil.incrementCounter)(senderID);\n          }\n        } else if (counter == 3) {\n          if (messData != \"skip\") {\n            //reminder.location = messageText;\n            var places = (0, _Util.getLocation)(messData);\n            var long, lat;\n            var buttons = [];\n            for (var i = 0; i < Math.min(3, places.length); i++) {\n              var button = { type: \"postback\",\n                title: places[i]['name'],\n                payload: JSON.stringify(places[i]) };\n              buttons.push(button);\n            }\n\n            respondText = {\n              attachment: {\n                type: \"template\",\n                payload: {\n                  template_type: \"button\",\n                  text: \"Choose a location: \",\n                  buttons: buttons\n                }\n              }\n            };\n            //respondText.attachment.payload.buttons = buttons;\n\n            console.log(buttons);\n            callSendAPI({\n              recipient: {\n                id: senderID\n              },\n              \"message\": respondText\n\n            });\n            // console.log(typeof respondText.attachment.payload.buttons);\n            // console.log(respondText.attachment.payload.buttons);\n            // console.log(respondText);\n          } else {\n            respondText = {\n              text: \"Attach any files. Type skip of none\"\n            };\n            (0, _dbUtil.incrementCounter)(senderID);\n          }\n\n          //respondText = \"Attach any files. Type skip of none\";\n          return;\n        } else if (counter == 4) {\n          console.log(reminder);\n          reminder.attachment = { url: \"\", type: \"\" };\n          if (messData[0].type) {\n            getAttachment(senderID, messData[0].payload.url, messData[0].type, \"Attachment\");\n            //Later will check for total element in database files\n            reminder.attachment = { url: \"https://preview.c9users.io/minhtri1296/project1/file-upload/test.png\", type: messData[0].type };\n          }\n\n          //addDB(\"Reminder\", reminder, senderID);\n          respondText = {\n            text: \"Finshed creating reminder.\"\n          };\n          (0, _dbUtil.flipCreating)(false, senderID);\n          (0, _dbUtil.replaceCounter)(0, senderID);\n          console.log(\"Success!\");\n          console.log(reminder);\n          reminder.date.setHours(reminder.date.getHours() - timezone);\n          (0, _dbUtil.addDB)(\"Reminder\", reminder, senderID, function (doc) {\n            var doc = doc.ops[0];\n            schedule.scheduleJob(reminder.date, function (x) {\n              MongoClient.connect(url1, function (err, db) {\n                if (err) throw err;\n                var collection = db.collection(\"Reminder\");\n                collection.find({ \"_id\": ObjectId(doc._id) }).toArray(function (err, docs) {\n                  if (err) throw err;\n                  if (docs.length != 0) {\n                    if (reminder.attachment) {\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        \"message\": {\n                          \"attachment\": {\n                            \"type\": reminder.attachment.type,\n                            \"payload\": {\n                              \"url\": reminder.attachment.url\n                            }\n                          }\n                        }\n                      });\n                    }\n                    if (reminder.location) {\n                      var location = JSON.parse(reminder.location);\n                      console.log(location);\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        message: {\n                          \"attachment\": {\n                            \"type\": \"template\",\n                            \"payload\": {\n                              \"template_type\": \"generic\",\n                              \"elements\": [{\n                                \"title\": location.name,\n                                \"image_url\": \"https://maps.googleapis.com/maps/api/staticmap?center=\" + location.latitude + \",\" + location.longitude + \"&zoom=15&size=600x300&maptype=roadmap&markers=color:red|\" + location.latitude + \",\" + location.longitude,\n                                \"subtitle\": \"Here is something you need to do at this location: \\\"\" + reminder.content + \"\\\"\",\n                                \"buttons\": [{\n                                  \"type\": \"web_url\",\n                                  \"url\": \"https://www.google.com/maps/place/\" + location.name + \"/@\" + location.latitude + \",\" + location.longitude,\n                                  \"title\": \"go to Google Map\"\n                                }]\n                              }]\n                            }\n                          }\n                        }\n                      });\n                      collection.remove({ \"_id\": ObjectId(doc._id) });\n                      db.close();\n                    } else {\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        message: {\n                          text: \"Here is something you need to do: \" + reminder.content\n                        }\n                      });\n                      collection.remove({ \"_id\": ObjectId(doc._id) });\n                      db.close();\n                    }\n                  }\n                });\n              });\n            }.bind(null, doc));\n          });\n        }\n        var messageData = {\n          recipient: {\n            id: senderID\n          },\n          message: respondText\n        };\n        console.log(\"test\");\n        callSendAPI(messageData);\n        console.log(counter);\n        (0, _dbUtil.changeReminder)(senderID, reminder);\n      });\n    });\n  });\n}\n\n// Set Express to listen out for HTTP requests\nvar server = app.listen(process.env.PORT || 3000, function () {\n  console.log(\"Listening on port %s\", server.address().port);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "bot.js"
      ],
      "names": [
        "ObjectId",
        "require",
        "ObjectID",
        "schedule",
        "watson",
        "mongodb",
        "express",
        "bodyParser",
        "request",
        "path",
        "http",
        "fs",
        "messengerButton",
        "userName",
        "conversation",
        "username",
        "password",
        "version",
        "version_date",
        "context",
        "app",
        "use",
        "json",
        "urlencoded",
        "extended",
        "MongoClient",
        "url1",
        "get",
        "req",
        "res",
        "query",
        "process",
        "env",
        "VERIFY_TOKEN",
        "console",
        "log",
        "status",
        "send",
        "error",
        "sendStatus",
        "writeHead",
        "write",
        "end",
        "post",
        "data",
        "body",
        "object",
        "entry",
        "forEach",
        "pageID",
        "id",
        "timeOfEvent",
        "time",
        "messaging",
        "event",
        "callUserProfileAPI",
        "sender",
        "userData",
        "userid",
        "counter",
        "keywords",
        "creating",
        "reminder",
        "timezone",
        "collection",
        "message",
        "receivedMessage",
        "postback",
        "receivedPostback",
        "senderID",
        "recipientID",
        "recipient",
        "timeOfMessage",
        "timestamp",
        "messageId",
        "mid",
        "messageText",
        "text",
        "messageAttachments",
        "attachments",
        "p",
        "newReminder",
        "sendTextMessage",
        "getAttachment",
        "payload",
        "url",
        "type",
        "timeOfPostback",
        "name",
        "fist_name",
        "sendWelcomeMessage",
        "location",
        "JSON",
        "parse",
        "messageData",
        "callSendAPI",
        "workspace_id",
        "input",
        "err",
        "response",
        "intents",
        "command",
        "intent",
        "respond",
        "str",
        "options",
        "weekday",
        "year",
        "month",
        "day",
        "content",
        "date",
        "toLocaleTimeString",
        "sendHelpMessage",
        "list",
        "index",
        "Number",
        "substr",
        "length",
        "_id",
        "connect",
        "db",
        "remove",
        "doc",
        "funnyQuotes",
        "i",
        "Math",
        "floor",
        "random",
        "senderId",
        "fileType",
        "replace",
        "urlReq",
        "uri",
        "method",
        "countAttachment",
        "find",
        "count",
        "result",
        "qs",
        "access_token",
        "PAGE_ACCESS_TOKEN",
        "statusCode",
        "recipientId",
        "recipient_id",
        "message_id",
        "cb",
        "first_name",
        "last_name",
        "messData",
        "respondText",
        "parts",
        "Date",
        "setHours",
        "getHours",
        "ops",
        "scheduleJob",
        "x",
        "toArray",
        "docs",
        "close",
        "bind",
        "places",
        "long",
        "lat",
        "buttons",
        "min",
        "button",
        "title",
        "stringify",
        "push",
        "attachment",
        "template_type",
        "latitude",
        "longitude",
        "server",
        "listen",
        "PORT",
        "address",
        "port"
      ],
      "mappings": "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",
      "file": "bot.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "//\n// This is main file containing code implementing the Express server and functionality for the Express echo bot.\n//\n'use strict';\nconst ObjectId = require('mongodb').ObjectID;\nconst schedule = require('node-schedule');\nconst watson = require('watson-developer-cloud');\nconst mongodb = require(\"mongodb\")\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst request = require('request');\nconst path = require('path');\nimport {getSortedList, incrementCounter, replaceCounter, flipCreating, \n        addDB, getDB, changeReminder, getProperty, getList} from './dbUtil';\nimport {nextReminder, checkDate, containsObject, list, getLocation} from './Util.js';\nvar http = require('https');\nvar fs = require('fs');\n\nvar messengerButton = \"<html><head><title>Facebook Messenger Bot</title></head><body><h1>Facebook Messenger Bot</h1>This is a bot based on Messenger Platform QuickStart. For more details, see their <a href=\\\"https://developers.facebook.com/docs/messenger-platform/guides/quick-start\\\">docs</a>.<footer id=\\\"gWidget\\\"></footer><script src=\\\"https://widget.glitch.me/widget.min.js\\\"></script></body></html>\";\n//User's data\nvar userName = \"test\";\n// Watson data\nvar conversation = watson.conversation({\n  username: 'a162acb8-d510-4c1e-8e81-aa514ee3b769',\n  password: 'kWC4xmdWiQ8Z',\n  version: 'v1',\n  version_date: '2017-02-03'\n});\nvar context = {};\n// The rest of the code implements the routes for our Express server.\nlet app = express();\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\n// database config\nvar MongoClient = mongodb.MongoClient\nvar url1 = \"mongodb://tienanh2007:Dien1234@ds157040.mlab.com:57040/reminderbot\";\n// Webhook validation\napp.get('/webhook', function(req, res) {\n  if (req.query['hub.mode'] === 'subscribe' &&\n      req.query['hub.verify_token'] === process.env.VERIFY_TOKEN) {\n    console.log(\"Validating webhook\");\n    res.status(200).send(req.query['hub.challenge']);\n  } else {\n    console.error(\"Failed validation. Make sure the validation tokens match.\");\n    res.sendStatus(403);          \n  }\n});\n\n// Display the web page\napp.get('/', function(req, res) {\n  res.writeHead(200, {'Content-Type': 'text/html'});\n  res.write(messengerButton);\n  res.end();\n});\n\n// Message processing\napp.post('/webhook', function (req, res) {\n  var data = req.body;\n  if (data.object === 'page') {    \n    // Iterate over each entry - there may be multiple if batched\n    data.entry.forEach(function(entry) {\n      var pageID = entry.id;\n      var timeOfEvent = entry.time;\n      // Iterate over each messaging event\n      entry.messaging.forEach(function(event) {\n        callUserProfileAPI(event.sender.id, function(body){\n          var userData = {userid: event.sender.id, counter: 0, keywords: [], creating: false, reminder: {}, timezone: body.timezone};\n          getDB(\"User\", function(collection){\n            if(!containsObject(event.sender.id, collection)){\n              addDB(\"User\", userData, event.sender.id);              \n            }\n            if (event.message) {\n              receivedMessage(event); \n            } else if (event.postback) {\n              receivedPostback(event); \n            } else {\n              console.log(\"Webhook received unknown event: \", event);\n            }\n          });\n        });\n        \n      });\n    });\n\n    // Assume all went well.\n    //\n    // You must send back a 200, within 20 seconds, to let us know\n    // you've successfully received the callback. Otherwise, the request\n    // will time out and we will keep trying to resend.\n    res.sendStatus(200);\n  }\n});\n\nfunction receivedMessage(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var timeOfMessage = event.timestamp;\n  var message = event.message;\n\n  console.log(\"Received message for user %d and page %d at %d with message:\", \n    senderID, recipientID, timeOfMessage);\n\n  var messageId = message.mid;\n\n  var messageText = message.text;\n  var messageAttachments = message.attachments;\n  \n  if (messageText) {\n    getProperty(senderID, \"User\", \"creating\", function(p){\n      if(p) newReminder(senderID, messageText);\n      else{\n        switch (messageText) {\n          //Cases where the text doesn't have to go through BlueMix API (Nothing right now)\n          // case 'generic':\n          //   sendGenericMessage(senderID);\n          //   break;\n          default:\n            sendTextMessage(senderID, messageText);\n        }\n      }\n    });\n  }\n  if (messageAttachments) {\n      getProperty(senderID, \"User\", \"creating\", function(p){\n        if(p) newReminder(senderID, messageAttachments);\n        else getAttachment(senderID, messageAttachments[0].payload.url, messageAttachments[0].type,\"Attachment\");\n      })      \n  }\n}\n\nfunction receivedPostback(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var timeOfPostback = event.timestamp;\n\n  // The 'payload' param is a developer-defined field which is set in a postback \n  // button for Structured Messages. \n  var payload = event.postback.payload;\n\n  console.log(\"Received postback for user %d and page %d with payload '%s' \" + \n    \"at %d\", senderID, recipientID, payload, timeOfPostback);\n\n  // When a postback is called, we'll send a message back to the sender to \n  // let them know it was successful\n  \n  //Do Something after users clicked Get Started button \n  if(event.postback.payload === \"GET_STARTED_PAYLOAD\"){\n    callUserProfileAPI(senderID, function(body){\n      console.log(body);\n      var name = body.fist_name + \" \" + body.fist_name;\n      sendWelcomeMessage(senderID, userName);\n    })\n    \n  }\n  else{\n    getProperty(senderID, \"User\", \"reminder\", function(reminder){\n      console.log(reminder);\n      reminder.location = payload;\n      var data = JSON.parse(payload);\n      //console.log(payload);\n      var messageData = {\n        recipient: {\n          id: senderID\n        },\n        message: {\n          text: \"Attach any files. Type skip if none\"\n        }\n      };\n      changeReminder(senderID, reminder);\n      incrementCounter(senderID);\n      callSendAPI(messageData);\n    });\n  }\n}\n\n//////////////////////////\n// Sending helpers\n//////////////////////////\nfunction sendTextMessage(senderID, messageText) {\n  conversation.message({\n    workspace_id: '1e7573f5-939d-47e3-8690-5ef1c0946b63',\n    input: {'text': messageText},\n    context: context\n  },  function(err, response) {\n    if (err)\n      console.log('error:', err);\n    else{\n      \n      var messageData;\n      if(response.intents[0]){\n        var command = response.intents[0].intent;\n        var respond = \"\";\n        switch (command) {\n        case 'list':\n          list(senderID, function(str){\n            callSendAPI({\n              recipient: {\n                id: senderID\n              },\n              message: {\n                text: str\n              }\n            });\n          });\n        break;\n        case 'next':\n          nextReminder(senderID, function(str){\n            var options = { weekday: \"long\", year: \"numeric\", month: \"short\",  \n              day: \"numeric\" };  \n            callSendAPI({\n              recipient: {\n                id: senderID\n              },\n              message: {\n                text: \"Here is something you need to do: \" + str.content + \" after \" + str.date.toLocaleTimeString(\"en-US\", options)\n              }\n            });\n          });\n        break;\n        case 'create':\n          respond = \"What do you want to remind about?\";\n          flipCreating(true, senderID);\n        break;\n        case 'help':                      \n          sendHelpMessage(senderID);          \n        break;\n        case 'delete':\n            getSortedList(senderID, \"Reminder\", function(list){\n              var index = Number(messageText.substr(messageText.length-1, 1))-1;\n              if(index >= 0 && index < list.length){\n                var id = list[index]._id;\n                MongoClient.connect(url1, function (err, db) {\n                  if (err) throw err\n                  var collection = db.collection(\"Reminder\");\n                  collection.remove({\"_id\": ObjectId(id)}, function(err, doc){\n                    callSendAPI({\n                      recipient: {\n                        id: senderID\n                      },\n                      message: {\n                        text: \"deleted \" + list[index].content\n                      }\n                    });\n                  });\n                });\n              }\n            });\n        break;\n          case 'hi':\n            respond = \"Hello\";\n            break;\n          case 'thx':\n            respond = \"You're welcome\";\n            break;\n          case 'bye':\n            respond = \"Good bye!\";\n            break;\n          case 'who':\n            respond = \"My name is Bob\";\n            break;\n        default:\n          respond = command;\n        };\n        messageData = {\n          recipient: {\n            id: senderID\n          },\n          message: {\n            text: respond\n          }\n        }\n      }\n      else{\n        var funnyQuotes = ['\"How do you get a sweet little 80-year-old lady to say the F word? Get another sweet little 80-year-old lady to yell \"BINGO!\" - Anonymous',\n                          'Knowledge is knowing a tomato is a fruit; wisdom is not putting it in a fruit salad. - Miles Kington',\n                          'By all means, marry. If you get a good wife, you’ll become happy; if you get a bad one, you’ll become a philosopher. - Socrates',\n                          'The best way to lie is to tell the truth . . . carefully edited truth. - Anonymous',\n                          'If you steal from one author, it’s plagiarism; if you steal from many, it’s research. - Wilson Mizner',\n                          'If evolution really works, how come mothers only have two hands? - Milton Berle'];\n        var i = Math.floor(Math.random()*6);\n        messageData = {\n          recipient: {\n            id: senderID\n          },\n          message: {\n            text: funnyQuotes[i] + \"\\nSorry for not understanding you. But above is a funny quote\"\n          }\n        }\n      }\n      if(messageData.message.text) callSendAPI(messageData);\n    }\n  });\n}\n\nfunction sendWelcomeMessage(senderId, name) {\n  var messageData = {\n    recipient: {\n      id: senderId\n    },\n    message: {\n      text: \"Welcome aboard \" + name + \"! My name is Bob. Right now I'm gonna walk you through the basic steps.\\n\" +\n      \"To talk to me, you don't have to say exact commands everytime. For example:\\n\" + \n      \"- Set up new reminders: 'I want to make/create/have new reminder'\\n\" + \n      \"- Retrieve the next reminder: 'I want to see the next/upcoming/following reminder'\\n\" + \n      \"- Retrieve the list of reminders: 'I want to list/show/get all reminders'\\nand many more...\"\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\n//Send the message when the user use 'help' command\nfunction sendHelpMessage(senderId) {\n  var messageData = {\n    recipient: {\n      id: senderId\n    },\n    message: {\n      text: \"- Set up new reminders: 'I want to make/create/have new reminder'\\n\" + \n      \"- Retrieve the next reminder: 'I want to see the next/upcoming/following reminder'\\n\" + \n      \"- Retrieve the list of reminders: 'I want to list/show/get all reminders'\\n\" + \n      \"- Delete a reminder: 'I want to remove/delete/destroy' [index] (index is the index number of the reminder in the list of reminders)\\n\" +\n      \"- Help: 'help/instruction/command'\"\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\n\nfunction getAttachment(senderID, url, fileType, message){\n  url = url.replace(/&/g, '%26');\n  var urlReq = \"https://project1-minhtri1296.c9users.io/test?url=\"+url+\"&type=\"+fileType+\"&userid=\"+senderID;\n  console.log(urlReq);\n  request({\n    uri: urlReq,\n    method: 'GET'\n  }, function(error, response, body) {\n      console.log(\"DONE!\");\n  })\n}\n\nfunction countAttachment(senderID){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(\"Attachments\");\n    collection.find({\"userid\": senderID}).count(function(err, result){\n      console.log(count);\n      var count = result;\n    });\n  })\n}\n\nfunction callSendAPI(messageData) {\n  request({\n    uri: 'https://graph.facebook.com/v2.6/me/messages',\n    qs: { access_token: process.env.PAGE_ACCESS_TOKEN },\n    method: 'POST',\n    json: messageData\n\n  }, function (error, response, body) {\n    if (!error && response.statusCode == 200) {\n      var recipientId = body.recipient_id;\n      var messageId = body.message_id;\n\n      //console.log(\"Successfully sent generic message with id %s to recipient %s\", messageId, recipientId);\n    } else {\n      console.error(\"Unable to send message.\");\n      console.error(response);\n      console.error(error);\n    }\n  });  \n}\n\n\n//Get the User Profile API\nfunction callUserProfileAPI(senderID, cb){\n  request({\n    uri: 'https://graph.facebook.com/v2.6/' + senderID + '?fields=first_name,last_name,timezone&access_token=' + process.env.PAGE_ACCESS_TOKEN,\n    method: 'GET'\n  }, function(error, response, body) {\n    if (!error && response.statusCode == 200) {\n      body = JSON.parse(body);\n      userName = body.first_name + \" \" + body.last_name;\n      console.log(\"Successfully sent generic message with the name \" + body.first_name + \" \" + body.last_name);\n      if(cb) cb(body);\n    } else {\n      console.error(\"Unable to send message.\");\n      //console.error(response);\n      //console.error(error);\n    }\n  });\n}\n\n\nfunction newReminder(senderID, messData){\n  var respondText;\n  getProperty(senderID, \"User\", \"counter\", function(counter){\n    getProperty(senderID, \"User\", \"reminder\", function(reminder){\n      getProperty(senderID, \"User\", \"timezone\", function(timezone){\n        console.log(counter);\n        if (counter == 0){\n          reminder.userid = senderID;\n          reminder.content = messData;\n          incrementCounter(senderID);\n          respondText = {\n                          text: \"When? (mm/dd/yy-hh:mm)\"\n                        };\n        }\n        else if (counter == 1){\n          var parts =  messData;\n          reminder.date = new Date(20+parts.substr(6,2),Number(parts.substr(0,2))-1,parts.substr(3,2), Number(parts.substr(9,2)),parts.substr(12,2));\n          var text = checkDate(reminder.date, parts, timezone);\n          if (text == \"Do you want add more information? (Y for yes, N for No)\") incrementCounter(senderID);\n          respondText = {\n                          text: text\n                        };\n        }\n        else if(counter == 2){\n          if(messData !== \"Y\" && messData !== \"N\"){\n            respondText = {\n                          text: \"Invalid character, type again (Y/N).\"\n                        };\n          }\n          else if(messData == \"N\"){\n            flipCreating(false, senderID);\n            reminder.date.setHours(reminder.date.getHours()-timezone);\n            addDB(\"Reminder\", reminder, senderID, function(doc){\n              var doc = doc.ops[0];\n              schedule.scheduleJob(doc.date, function(x){\n                MongoClient.connect(url1, function (err, db) {\n                  if (err) throw err\n                  var collection = db.collection(\"Reminder\");\n                  collection.find({\"_id\": ObjectId(doc._id)}).toArray(function(err, docs){\n                    if (err) throw err\n                    if(docs.length != 0){\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        message: {\n                          text: \"Here is something you need to do: \" + x.content\n                        }\n                      });\n                      collection.remove({\"_id\": ObjectId(doc._id)});\n                      db.close();\n                    }\n                  });\n                });\n              }.bind(null, doc));\n            });\n            respondText = {\n              text: \"Event added successfully!\"\n            };            \n            replaceCounter(0 ,senderID);\n            reminder = {};\n          }\n          else{\n            respondText = {\n                          text: \"What is the location? Type skip if none\"\n                        };  \n            incrementCounter(senderID);\n          }\n        }\n        else if(counter == 3){\n          if(messData != \"skip\") {\n            //reminder.location = messageText;\n            var places = getLocation(messData);\n            var long, lat;\n            var buttons = [];\n            for(var i=0; i<Math.min(3, places.length); i++){\n              var button = {type:\"postback\",\n                            title:places[i]['name'],\n                            payload: JSON.stringify(places[i])}\n              buttons.push(button);\n            }\n\n            respondText = {\n              attachment:{\n                type:\"template\",\n                payload:{\n                  template_type:\"button\",\n                  text:\"Choose a location: \",\n                  buttons: buttons\n                }\n              }\n            };  \n            //respondText.attachment.payload.buttons = buttons;\n\n            console.log(buttons);\n            callSendAPI({\n                      recipient: {\n                        id: senderID\n                      },\n                      \"message\":respondText\n                        \n          })\n            // console.log(typeof respondText.attachment.payload.buttons);\n            // console.log(respondText.attachment.payload.buttons);\n            // console.log(respondText);\n          }\n          else{\n          respondText = {\n                          text: \"Attach any files. Type skip of none\"\n                        };  \n            incrementCounter(senderID);\n          }\n          \n          \n          //respondText = \"Attach any files. Type skip of none\";\n          return;\n        }\n        else if (counter == 4){\n          console.log(reminder);\n          reminder.attachment = {url: \"\", type: \"\"}\n          if (messData[0].type){\n            getAttachment(senderID, messData[0].payload.url, messData[0].type, \"Attachment\");\n            //Later will check for total element in database files\n            reminder.attachment = {url: \"https://preview.c9users.io/minhtri1296/project1/file-upload/test.png\", type: messData[0].type};\n          }\n                    \n          //addDB(\"Reminder\", reminder, senderID);\n          respondText = {\n                          text: \"Finshed creating reminder.\"\n                        };            \n          flipCreating(false, senderID);\n          replaceCounter(0,senderID);\n          console.log(\"Success!\");\n          console.log(reminder);\n          reminder.date.setHours(reminder.date.getHours()-timezone);\n          addDB(\"Reminder\", reminder, senderID, function(doc){\n            var doc = doc.ops[0];\n            schedule.scheduleJob(reminder.date, function(x){\n              MongoClient.connect(url1, function (err, db) {\n                if (err) throw err\n                var collection = db.collection(\"Reminder\");\n                collection.find({\"_id\": ObjectId(doc._id)}).toArray(function(err, docs){\n                  if (err) throw err\n                  if(docs.length != 0){\n                    if (reminder.attachment){  \n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        \"message\":{\n                          \"attachment\":{\n                            \"type\": reminder.attachment.type,\n                            \"payload\":{\n                              \"url\": reminder.attachment.url\n                            }\n                          }\n                        }\n                      })\n                    }                    \n                    if(reminder.location){\n                      var location = JSON.parse(reminder.location);\n                      console.log(location);\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        message: {\n                          \"attachment\":{\n                            \"type\":\"template\",\n                            \"payload\":{\n                              \"template_type\":\"generic\",\n                              \"elements\":[\n                                 {\n                                  \"title\": location.name,\n                                   \"image_url\":\"https://maps.googleapis.com/maps/api/staticmap?center=\"+location.latitude+\",\"+location.longitude+\"&zoom=15&size=600x300&maptype=roadmap&markers=color:red|\"+location.latitude+\",\"+location.longitude,\n                                  \"subtitle\": \"Here is something you need to do at this location: \\\"\" + reminder.content + \"\\\"\",\n                                  \"buttons\":[\n                                    {\n                                      \"type\":\"web_url\",\n                                      \"url\":\"https://www.google.com/maps/place/\"+location.name+\"/@\"+location.latitude+\",\"+location.longitude,\n                                      \"title\":\"go to Google Map\"\n                                    }\n                                  ]      \n                                }\n                              ]\n                            }\n                          }\n                        }\n                      });\n                      collection.remove({\"_id\": ObjectId(doc._id)});\n                      db.close();\n                    }\n                    else{\n                      callSendAPI({\n                        recipient: {\n                          id: senderID\n                        },\n                        message: {\n                          text: \"Here is something you need to do: \" + reminder.content\n                        }\n                      });\n                      collection.remove({\"_id\": ObjectId(doc._id)});\n                      db.close();\n                    }\n                  }\n                });\n              });\n            }.bind(null, doc));\n          });\n        }\n        var messageData = {\n          recipient: {\n            id: senderID\n          },\n          message: respondText\n        };\n        console.log(\"test\");\n        callSendAPI(messageData);\n        console.log(counter);\n        changeReminder(senderID, reminder);\n      });\n    });\n  });\n}\n\n\n// Set Express to listen out for HTTP requests\nvar server = app.listen(process.env.PORT || 3000, function () {\n  console.log(\"Listening on port %s\", server.address().port);\n});\n"
      ]
    },
    "mtime": 1520898426000
  },
  "{\"filename\":\"/app/dbUtil.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/dbUtil.js",
      "filenameRelative": "/app/dbUtil.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "dbUtil.js",
      "sourceFileName": "dbUtil.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "dbUtil"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nvar mongodb = require(\"mongodb\");\nvar MongoClient = mongodb.MongoClient;\nvar url1 = \"mongodb://tienanh2007:Dien1234@ds157040.mlab.com:57040/reminderbot\";\nexports.getSortedList = function (senderID, collectionName, cb) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(collectionName);\n    collection.find({ \"userid\": senderID }, { \"sort\": [\"date\"] }).toArray(function (err, docs) {\n      cb(docs);\n    });\n  });\n};\nexports.incrementCounter = function (senderID) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({ \"userid\": senderID }, { $inc: { \"counter\": 1 } });\n  });\n};\nexports.replaceCounter = function (value, senderID) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({ \"userid\": senderID }, { $set: { \"counter\": value } });\n  });\n};\nexports.flipCreating = function (value, senderID) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({ \"userid\": senderID }, { $set: { \"creating\": value } });\n  });\n};\n//Function for database (#database)\nexports.addDB = function (name, object, senderID, cb) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(name);\n    collection.insert(object, function (err, docs) {\n      if (err) console.log(err);\n      if (cb) cb(docs);\n      db.close();\n    });\n  });\n};\nexports.getDB = function (name, cb) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(name);\n    collection.find({}, { _id: 0 }).toArray(function (err, docs) {\n      db.close();\n      cb(docs);\n    });\n  });\n};\nexports.changeReminder = function (senderID, value) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({ \"userid\": senderID }, { $set: { \"reminder\": value } });\n  });\n};\nexports.getProperty = function (senderID, collectionName, property, cb) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(collectionName);\n    collection.findOne({ \"userid\": senderID }, function (err, ret) {\n      cb(ret[property]);\n    });\n  });\n};\nexports.getList = function (senderID, collectionName, cb) {\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err;\n    var collection = db.collection(collectionName);\n    collection.find({ \"userid\": senderID }).toArray(function (err, docs) {\n      cb(docs);\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiVXRpbC5qcyJdLCJuYW1lcyI6WyJtb25nb2RiIiwicmVxdWlyZSIsIk1vbmdvQ2xpZW50IiwidXJsMSIsImV4cG9ydHMiLCJnZXRTb3J0ZWRMaXN0Iiwic2VuZGVySUQiLCJjb2xsZWN0aW9uTmFtZSIsImNiIiwiY29ubmVjdCIsImVyciIsImRiIiwiY29sbGVjdGlvbiIsImZpbmQiLCJ0b0FycmF5IiwiZG9jcyIsImluY3JlbWVudENvdW50ZXIiLCJmaW5kT25lQW5kVXBkYXRlIiwiJGluYyIsInJlcGxhY2VDb3VudGVyIiwidmFsdWUiLCIkc2V0IiwiZmxpcENyZWF0aW5nIiwiYWRkREIiLCJuYW1lIiwib2JqZWN0IiwiaW5zZXJ0IiwiY29uc29sZSIsImxvZyIsImNsb3NlIiwiZ2V0REIiLCJfaWQiLCJjaGFuZ2VSZW1pbmRlciIsImdldFByb3BlcnR5IiwicHJvcGVydHkiLCJmaW5kT25lIiwicmV0IiwiZ2V0TGlzdCJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxVQUFVQyxRQUFRLFNBQVIsQ0FBaEI7QUFDQSxJQUFJQyxjQUFjRixRQUFRRSxXQUExQjtBQUNBLElBQUlDLE9BQU8sb0VBQVg7QUFDQUMsUUFBUUMsYUFBUixHQUF3QixVQUFTQyxRQUFULEVBQW1CQyxjQUFuQixFQUFtQ0MsRUFBbkMsRUFBc0M7QUFDNUROLGNBQVlPLE9BQVosQ0FBb0JOLElBQXBCLEVBQTBCLFVBQVVPLEdBQVYsRUFBZUMsRUFBZixFQUFtQjtBQUMzQyxRQUFJRCxHQUFKLEVBQVMsTUFBTUEsR0FBTjtBQUNULFFBQUlFLGFBQWFELEdBQUdDLFVBQUgsQ0FBY0wsY0FBZCxDQUFqQjtBQUNBSyxlQUFXQyxJQUFYLENBQWdCLEVBQUMsVUFBVVAsUUFBWCxFQUFoQixFQUFzQyxFQUFDLFFBQU8sQ0FBQyxNQUFELENBQVIsRUFBdEMsRUFBeURRLE9BQXpELENBQWlFLFVBQVNKLEdBQVQsRUFBY0ssSUFBZCxFQUFtQjtBQUNsRlAsU0FBR08sSUFBSDtBQUNELEtBRkQ7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RFAsU0FBR08sSUFBSDtBQUNELEtBRkQ7QUFHRCxHQU5EO0FBT0QsQ0FSRCIsImZpbGUiOiJkYlV0aWwuanMiLCJzb3VyY2VSb290IjoiL2FwcCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvZGIgPSByZXF1aXJlKFwibW9uZ29kYlwiKVxudmFyIE1vbmdvQ2xpZW50ID0gbW9uZ29kYi5Nb25nb0NsaWVudFxudmFyIHVybDEgPSBcIm1vbmdvZGI6Ly90aWVuYW5oMjAwNzpEaWVuMTIzNEBkczE1NzA0MC5tbGFiLmNvbTo1NzA0MC9yZW1pbmRlcmJvdFwiO1xuZXhwb3J0cy5nZXRTb3J0ZWRMaXN0ID0gZnVuY3Rpb24oc2VuZGVySUQsIGNvbGxlY3Rpb25OYW1lLCBjYil7XG4gIE1vbmdvQ2xpZW50LmNvbm5lY3QodXJsMSwgZnVuY3Rpb24gKGVyciwgZGIpIHtcbiAgICBpZiAoZXJyKSB0aHJvdyBlcnJcbiAgICB2YXIgY29sbGVjdGlvbiA9IGRiLmNvbGxlY3Rpb24oY29sbGVjdGlvbk5hbWUpO1xuICAgIGNvbGxlY3Rpb24uZmluZCh7XCJ1c2VyaWRcIjogc2VuZGVySUR9LCB7XCJzb3J0XCI6W1wiZGF0ZVwiXX0pLnRvQXJyYXkoZnVuY3Rpb24oZXJyLCBkb2NzKXtcbiAgICAgIGNiKGRvY3MpO1xuICAgIH0pO1xuICB9KVxufVxuZXhwb3J0cy5pbmNyZW1lbnRDb3VudGVyID0gZnVuY3Rpb24oc2VuZGVySUQpe1xuICBNb25nb0NsaWVudC5jb25uZWN0KHVybDEsIGZ1bmN0aW9uIChlcnIsIGRiKSB7XG4gICAgaWYgKGVycikgdGhyb3cgZXJyXG4gICAgdmFyIGNvbGxlY3Rpb24gPSBkYi5jb2xsZWN0aW9uKFwiVXNlclwiKTtcbiAgICBjb2xsZWN0aW9uLmZpbmRPbmVBbmRVcGRhdGUoe1widXNlcmlkXCI6c2VuZGVySUR9LHskaW5jOntcImNvdW50ZXJcIjoxfX0pO1xuICB9KVxufVxuZXhwb3J0cy5yZXBsYWNlQ291bnRlciA9IGZ1bmN0aW9uKHZhbHVlLCBzZW5kZXJJRCl7XG4gIE1vbmdvQ2xpZW50LmNvbm5lY3QodXJsMSwgZnVuY3Rpb24gKGVyciwgZGIpIHtcbiAgICBpZiAoZXJyKSB0aHJvdyBlcnJcbiAgICB2YXIgY29sbGVjdGlvbiA9IGRiLmNvbGxlY3Rpb24oXCJVc2VyXCIpO1xuICAgIGNvbGxlY3Rpb24uZmluZE9uZUFuZFVwZGF0ZSh7XCJ1c2VyaWRcIjpzZW5kZXJJRH0seyRzZXQ6e1wiY291bnRlclwiIDogdmFsdWV9fSk7XG4gIH0pXG59XG5leHBvcnRzLmZsaXBDcmVhdGluZyA9IGZ1bmN0aW9uKHZhbHVlLCBzZW5kZXJJRCl7XG4gIE1vbmdvQ2xpZW50LmNvbm5lY3QodXJsMSwgZnVuY3Rpb24gKGVyciwgZGIpIHtcbiAgICBpZiAoZXJyKSB0aHJvdyBlcnJcbiAgICB2YXIgY29sbGVjdGlvbiA9IGRiLmNvbGxlY3Rpb24oXCJVc2VyXCIpO1xuICAgIGNvbGxlY3Rpb24uZmluZE9uZUFuZFVwZGF0ZSh7XCJ1c2VyaWRcIjpzZW5kZXJJRH0seyRzZXQ6e1wiY3JlYXRpbmdcIiA6IHZhbHVlfX0pO1xuICB9KVxufVxuLy9GdW5jdGlvbiBmb3IgZGF0YWJhc2UgKCNkYXRhYmFzZSlcbmV4cG9ydHMuYWRkREIgPSBmdW5jdGlvbihuYW1lLCBvYmplY3QsIHNlbmRlcklELCBjYil7XG4gIE1vbmdvQ2xpZW50LmNvbm5lY3QodXJsMSwgZnVuY3Rpb24gKGVyciwgZGIpIHtcbiAgICBpZiAoZXJyKSB0aHJvdyBlcnJcbiAgICB2YXIgY29sbGVjdGlvbiA9IGRiLmNvbGxlY3Rpb24obmFtZSk7XG4gICAgY29sbGVjdGlvbi5pbnNlcnQob2JqZWN0LCBmdW5jdGlvbihlcnIsIGRvY3Mpe1xuICAgICAgaWYoZXJyKSBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgaWYoY2IpIGNiKGRvY3MpO1xuICAgICAgZGIuY2xvc2UoKTtcbiAgICB9KTtcbiAgfSlcbn1cbmV4cG9ydHMuZ2V0REIgPSBmdW5jdGlvbihuYW1lLCBjYil7XG4gIE1vbmdvQ2xpZW50LmNvbm5lY3QodXJsMSwgZnVuY3Rpb24gKGVyciwgZGIpIHtcbiAgICBpZiAoZXJyKSB0aHJvdyBlcnJcbiAgICB2YXIgY29sbGVjdGlvbiA9IGRiLmNvbGxlY3Rpb24obmFtZSk7XG4gICAgY29sbGVjdGlvbi5maW5kKHt9LHtfaWQ6MH0pLnRvQXJyYXkoZnVuY3Rpb24oZXJyLCBkb2NzKSB7XG4gICAgICBkYi5jbG9zZSgpO1xuICAgICAgY2IoZG9jcyk7XG4gICAgfSlcbiAgfSlcbn1cbmV4cG9ydHMuY2hhbmdlUmVtaW5kZXIgPSBmdW5jdGlvbihzZW5kZXJJRCwgdmFsdWUpe1xuICBNb25nb0NsaWVudC5jb25uZWN0KHVybDEsIGZ1bmN0aW9uIChlcnIsIGRiKSB7XG4gICAgaWYgKGVycikgdGhyb3cgZXJyXG4gICAgdmFyIGNvbGxlY3Rpb24gPSBkYi5jb2xsZWN0aW9uKFwiVXNlclwiKTtcbiAgICBjb2xsZWN0aW9uLmZpbmRPbmVBbmRVcGRhdGUoe1widXNlcmlkXCI6c2VuZGVySUR9LHskc2V0OntcInJlbWluZGVyXCIgOiB2YWx1ZX19KTtcbiAgfSlcbn1cbmV4cG9ydHMuZ2V0UHJvcGVydHkgPSBmdW5jdGlvbihzZW5kZXJJRCwgY29sbGVjdGlvbk5hbWUsIHByb3BlcnR5LCBjYil7XG4gIE1vbmdvQ2xpZW50LmNvbm5lY3QodXJsMSwgZnVuY3Rpb24gKGVyciwgZGIpIHtcbiAgICBpZiAoZXJyKSB0aHJvdyBlcnJcbiAgICB2YXIgY29sbGVjdGlvbiA9IGRiLmNvbGxlY3Rpb24oY29sbGVjdGlvbk5hbWUpO1xuICAgIGNvbGxlY3Rpb24uZmluZE9uZSh7XCJ1c2VyaWRcIjogc2VuZGVySUR9LCBmdW5jdGlvbihlcnIsIHJldCl7XG4gICAgICBjYihyZXRbcHJvcGVydHldKTtcbiAgICB9KTtcbiAgfSlcbn1cbmV4cG9ydHMuZ2V0TGlzdCA9IGZ1bmN0aW9uKHNlbmRlcklELCBjb2xsZWN0aW9uTmFtZSwgY2Ipe1xuICBNb25nb0NsaWVudC5jb25uZWN0KHVybDEsIGZ1bmN0aW9uIChlcnIsIGRiKSB7XG4gICAgaWYgKGVycikgdGhyb3cgZXJyXG4gICAgdmFyIGNvbGxlY3Rpb24gPSBkYi5jb2xsZWN0aW9uKGNvbGxlY3Rpb25OYW1lKTtcbiAgICBjb2xsZWN0aW9uLmZpbmQoe1widXNlcmlkXCI6IHNlbmRlcklEfSkudG9BcnJheShmdW5jdGlvbihlcnIsIGRvY3Mpe1xuICAgICAgY2IoZG9jcyk7XG4gICAgfSk7XG4gIH0pXG59Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "dbUtil.js"
      ],
      "names": [
        "mongodb",
        "require",
        "MongoClient",
        "url1",
        "exports",
        "getSortedList",
        "senderID",
        "collectionName",
        "cb",
        "connect",
        "err",
        "db",
        "collection",
        "find",
        "toArray",
        "docs",
        "incrementCounter",
        "findOneAndUpdate",
        "$inc",
        "replaceCounter",
        "value",
        "$set",
        "flipCreating",
        "addDB",
        "name",
        "object",
        "insert",
        "console",
        "log",
        "close",
        "getDB",
        "_id",
        "changeReminder",
        "getProperty",
        "property",
        "findOne",
        "ret",
        "getList"
      ],
      "mappings": "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",
      "file": "dbUtil.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "const mongodb = require(\"mongodb\")\nvar MongoClient = mongodb.MongoClient\nvar url1 = \"mongodb://tienanh2007:Dien1234@ds157040.mlab.com:57040/reminderbot\";\nexports.getSortedList = function(senderID, collectionName, cb){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(collectionName);\n    collection.find({\"userid\": senderID}, {\"sort\":[\"date\"]}).toArray(function(err, docs){\n      cb(docs);\n    });\n  })\n}\nexports.incrementCounter = function(senderID){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({\"userid\":senderID},{$inc:{\"counter\":1}});\n  })\n}\nexports.replaceCounter = function(value, senderID){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({\"userid\":senderID},{$set:{\"counter\" : value}});\n  })\n}\nexports.flipCreating = function(value, senderID){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({\"userid\":senderID},{$set:{\"creating\" : value}});\n  })\n}\n//Function for database (#database)\nexports.addDB = function(name, object, senderID, cb){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(name);\n    collection.insert(object, function(err, docs){\n      if(err) console.log(err);\n      if(cb) cb(docs);\n      db.close();\n    });\n  })\n}\nexports.getDB = function(name, cb){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(name);\n    collection.find({},{_id:0}).toArray(function(err, docs) {\n      db.close();\n      cb(docs);\n    })\n  })\n}\nexports.changeReminder = function(senderID, value){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(\"User\");\n    collection.findOneAndUpdate({\"userid\":senderID},{$set:{\"reminder\" : value}});\n  })\n}\nexports.getProperty = function(senderID, collectionName, property, cb){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(collectionName);\n    collection.findOne({\"userid\": senderID}, function(err, ret){\n      cb(ret[property]);\n    });\n  })\n}\nexports.getList = function(senderID, collectionName, cb){\n  MongoClient.connect(url1, function (err, db) {\n    if (err) throw err\n    var collection = db.collection(collectionName);\n    collection.find({\"userid\": senderID}).toArray(function(err, docs){\n      cb(docs);\n    });\n  })\n}"
      ]
    },
    "mtime": 1520898427000
  },
  "{\"filename\":\"/app/Util.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./dbUtil",
            "imported": [
              "getList",
              "getProperty",
              "getSortedList"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getList",
                "local": "getList"
              },
              {
                "kind": "named",
                "imported": "getProperty",
                "local": "getProperty"
              },
              {
                "kind": "named",
                "imported": "getSortedList",
                "local": "getSortedList"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/Util.js",
      "filenameRelative": "/app/Util.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "Util.js",
      "sourceFileName": "Util.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "Util"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _dbUtil = require('./dbUtil');\n\nvar sRequest = require('sync-request');\nexports.nextReminder = function (senderID, cb) {\n  (0, _dbUtil.getList)(senderID, \"Reminder\", function (list) {\n    if (list[0]) {\n      cb(list[0]);\n    } else cb(\"No Reminder\");\n  });\n};\nexports.list = function (senderID, cb) {\n  (0, _dbUtil.getProperty)(senderID, \"User\", \"timezone\", function (timezone) {\n    (0, _dbUtil.getSortedList)(senderID, \"Reminder\", function (list) {\n      var i = 1;\n      var str = \"\";\n      list.forEach(function (reminder) {\n        var day = reminder.date.getDate();\n        var month = reminder.date.getMonth() + 1;\n        var year = reminder.date.getFullYear();\n        var hour = reminder.date.getHours() + timezone;\n        var minute = reminder.date.getMinutes();\n        str += i + \". Content: \" + reminder.content + \"\\n   Date: \" + month + \"/\" + day + \"/\" + year + \" \" + hour + \":\" + minute + \"\\n   Location: \" + (reminder.location !== undefined ? JSON.parse(reminder.location).name : \"none\") + \"\\n\";\n        i++;\n      });\n      if (!str) str = \"No reminders\";\n      cb(str);\n    });\n  });\n};\nexports.containsObject = function (id, list) {\n  var i;\n  for (i = 0; i < list.length; i++) {\n    if (list[i].userid == id) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexports.checkDate = function (testDate, parts, timezone) {\n  var curDate = new Date();\n  testDate.setHours(testDate.getHours() - timezone);\n  var year = Number(20 + parts.substr(6, 2));\n  var month = Number(parts.substr(0, 2)) - 1;\n  var date = Number(parts.substr(3, 2));\n  var hour = Number(parts.substr(9, 2));\n  var minute = Number(parts.substr(12, 2));\n  if (curDate.getTime() > testDate.getTime()) return \"Invalid date! Please insert time in the future for your reminder\";\n  testDate.setHours(testDate.getHours() + timezone);\n  if (year != testDate.getFullYear() || month != testDate.getMonth() || date != testDate.getDate() || hour != testDate.getHours() || minute != testDate.getMinutes()) {\n    return \"Invalid date format! Please type again!\";\n  }\n  return \"Do you want add more information? (Y for yes, N for No)\";\n};\nexports.getLocation = function (location) {\n  var places = [];\n  var url = \"https://maps.googleapis.com/maps/api/place/textsearch/json?query=\" + location + \"&key=\" + process.env.GOOGLE_API_KEY;\n  var res = sRequest('GET', url, {\n    timeout: 10000\n  });\n  var data = JSON.parse(res.getBody('utf8'));\n\n  for (var i = 0; i < data.results.length; i++) {\n    var place = { \"name\": data.results[i][\"formatted_address\"],\n      \"latitude\": data.results[i][\"geometry\"][\"location\"][\"lat\"],\n      \"longitude\": data.results[i][\"geometry\"][\"location\"][\"lng\"]\n    };\n    //var messageId = body.message_id;\n    places.push(place);\n    //console.log(\"Successfully sent generic message with place \"+ place.name + \" longitude = \" + place.longitude);\n  }\n  return places;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "Util.js"
      ],
      "names": [
        "sRequest",
        "require",
        "exports",
        "nextReminder",
        "senderID",
        "cb",
        "list",
        "timezone",
        "i",
        "str",
        "forEach",
        "reminder",
        "day",
        "date",
        "getDate",
        "month",
        "getMonth",
        "year",
        "getFullYear",
        "hour",
        "getHours",
        "minute",
        "getMinutes",
        "content",
        "location",
        "undefined",
        "JSON",
        "parse",
        "name",
        "containsObject",
        "id",
        "length",
        "userid",
        "checkDate",
        "testDate",
        "parts",
        "curDate",
        "Date",
        "setHours",
        "Number",
        "substr",
        "getTime",
        "getLocation",
        "places",
        "url",
        "process",
        "env",
        "GOOGLE_API_KEY",
        "res",
        "timeout",
        "data",
        "getBody",
        "results",
        "place",
        "push"
      ],
      "mappings": ";;AAAA;;AACA,IAAMA,WAAWC,QAAQ,cAAR,CAAjB;AACAC,QAAQC,YAAR,GAAuB,UAASC,QAAT,EAAmBC,EAAnB,EAAsB;AAC3C,uBAAQD,QAAR,EAAkB,UAAlB,EAA8B,UAASE,IAAT,EAAc;AAC1C,QAAGA,KAAK,CAAL,CAAH,EAAW;AACTD,SAAGC,KAAK,CAAL,CAAH;AACD,KAFD,MAGKD,GAAG,aAAH;AACN,GALD;AAMD,CAPD;AAQAH,QAAQI,IAAR,GAAe,UAASF,QAAT,EAAmBC,EAAnB,EAAsB;AACnC,2BAAYD,QAAZ,EAAsB,MAAtB,EAA8B,UAA9B,EAA0C,UAASG,QAAT,EAAkB;AAC1D,+BAAcH,QAAd,EAAwB,UAAxB,EAAoC,UAASE,IAAT,EAAc;AAChD,UAAIE,IAAI,CAAR;AACA,UAAIC,MAAM,EAAV;AACAH,WAAKI,OAAL,CAAa,UAASC,QAAT,EAAkB;AAC7B,YAAIC,MAAMD,SAASE,IAAT,CAAcC,OAAd,EAAV;AACA,YAAIC,QAAQJ,SAASE,IAAT,CAAcG,QAAd,KAA2B,CAAvC;AACA,YAAIC,OAAON,SAASE,IAAT,CAAcK,WAAd,EAAX;AACA,YAAIC,OAAOR,SAASE,IAAT,CAAcO,QAAd,KAAyBb,QAApC;AACA,YAAIc,SAASV,SAASE,IAAT,CAAcS,UAAd,EAAb;AACAb,eAAOD,IAAI,aAAJ,GAAoBG,SAASY,OAA7B,GAAuC,aAAvC,GAAuDR,KAAvD,GAA+D,GAA/D,GAAqEH,GAArE,GAA2E,GAA3E,GAAiFK,IAAjF,GACH,GADG,GACGE,IADH,GACU,GADV,GACgBE,MADhB,GACyB,iBADzB,IAC8CV,SAASa,QAAT,KAAsBC,SAAtB,GAAkCC,KAAKC,KAAL,CAAWhB,SAASa,QAApB,EAA8BI,IAAhE,GAAuE,MADrH,IAC8H,IADrI;AAEApB;AACD,OATD;AAUA,UAAG,CAACC,GAAJ,EAASA,MAAM,cAAN;AACTJ,SAAGI,GAAH;AACD,KAfD;AAgBD,GAjBD;AAkBD,CAnBD;AAoBAP,QAAQ2B,cAAR,GAAyB,UAASC,EAAT,EAAaxB,IAAb,EAAmB;AACxC,MAAIE,CAAJ;AACA,OAAKA,IAAI,CAAT,EAAYA,IAAIF,KAAKyB,MAArB,EAA6BvB,GAA7B,EAAkC;AAC9B,QAAIF,KAAKE,CAAL,EAAQwB,MAAR,IAAkBF,EAAtB,EAA0B;AACtB,aAAO,IAAP;AACH;AACJ;;AAED,SAAO,KAAP;AACH,CATD;;AAYA5B,QAAQ+B,SAAR,GAAoB,UAASC,QAAT,EAAmBC,KAAnB,EAA0B5B,QAA1B,EAAmC;AACrD,MAAI6B,UAAU,IAAIC,IAAJ,EAAd;AACAH,WAASI,QAAT,CAAkBJ,SAASd,QAAT,KAAoBb,QAAtC;AACA,MAAIU,OAAOsB,OAAO,KAAGJ,MAAMK,MAAN,CAAa,CAAb,EAAe,CAAf,CAAV,CAAX;AACA,MAAIzB,QAAQwB,OAAOJ,MAAMK,MAAN,CAAa,CAAb,EAAe,CAAf,CAAP,IAA0B,CAAtC;AACA,MAAI3B,OAAO0B,OAAOJ,MAAMK,MAAN,CAAa,CAAb,EAAe,CAAf,CAAP,CAAX;AACA,MAAIrB,OAAOoB,OAAOJ,MAAMK,MAAN,CAAa,CAAb,EAAe,CAAf,CAAP,CAAX;AACA,MAAInB,SAASkB,OAAOJ,MAAMK,MAAN,CAAa,EAAb,EAAgB,CAAhB,CAAP,CAAb;AACA,MAAIJ,QAAQK,OAAR,KAAkBP,SAASO,OAAT,EAAtB,EAA0C,OAAO,kEAAP;AAC1CP,WAASI,QAAT,CAAkBJ,SAASd,QAAT,KAAoBb,QAAtC;AACA,MAAIU,QAAMiB,SAAShB,WAAT,EAAN,IAA8BH,SAAOmB,SAASlB,QAAT,EAArC,IAA0DH,QAAMqB,SAASpB,OAAT,EAAhE,IAAoFK,QAAMe,SAASd,QAAT,EAA1F,IAA+GC,UAAQa,SAASZ,UAAT,EAA3H,EAAiJ;AACjJ,WAAO,yCAAP;AACC;AACD,SAAO,yDAAP;AACD,CAdD;AAeApB,QAAQwC,WAAR,GAAsB,UAASlB,QAAT,EAAkB;AACtC,MAAImB,SAAS,EAAb;AACA,MAAIC,MAAM,sEAAsEpB,QAAtE,GAAiF,OAAjF,GAA2FqB,QAAQC,GAAR,CAAYC,cAAjH;AACA,MAAIC,MAAMhD,SAAS,KAAT,EAAgB4C,GAAhB,EAAqB;AACrBK,aAAS;AADY,GAArB,CAAV;AAGA,MAAIC,OAAQxB,KAAKC,KAAL,CAAWqB,IAAIG,OAAJ,CAAY,MAAZ,CAAX,CAAZ;;AAEA,OAAK,IAAI3C,IAAI,CAAb,EAAgBA,IAAI0C,KAAKE,OAAL,CAAarB,MAAjC,EAAyCvB,GAAzC,EAA6C;AAC3C,QAAI6C,QAAQ,EAAC,QAAQH,KAAKE,OAAL,CAAa5C,CAAb,EAAgB,mBAAhB,CAAT;AACA,kBAAY0C,KAAKE,OAAL,CAAa5C,CAAb,EAAgB,UAAhB,EAA4B,UAA5B,EAAwC,KAAxC,CADZ;AAEA,mBAAa0C,KAAKE,OAAL,CAAa5C,CAAb,EAAgB,UAAhB,EAA4B,UAA5B,EAAwC,KAAxC;AAFb,KAAZ;AAIA;AACAmC,WAAOW,IAAP,CAAYD,KAAZ;AACA;AACD;AACD,SAAOV,MAAP;AACD,CAlBD",
      "file": "Util.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "import {getList, getProperty, getSortedList} from './dbUtil';\nconst sRequest = require('sync-request');\nexports.nextReminder = function(senderID, cb){\n  getList(senderID, \"Reminder\", function(list){\n    if(list[0]){\n      cb(list[0]);\n    } \n    else cb(\"No Reminder\");\n  });\n}\nexports.list = function(senderID, cb){\n  getProperty(senderID, \"User\", \"timezone\", function(timezone){\n    getSortedList(senderID, \"Reminder\", function(list){\n      var i = 1;\n      var str = \"\";\n      list.forEach(function(reminder){\n        var day = reminder.date.getDate();\n        var month = reminder.date.getMonth() + 1;\n        var year = reminder.date.getFullYear();\n        var hour = reminder.date.getHours()+timezone;\n        var minute = reminder.date.getMinutes();\n        str += i + \". Content: \" + reminder.content + \"\\n   Date: \" + month + \"/\" + day + \"/\" + year \n          + \" \" + hour + \":\" + minute + \"\\n   Location: \" + (reminder.location !== undefined ? JSON.parse(reminder.location).name : \"none\")+ \"\\n\";\n        i++;\n      });\n      if(!str) str = \"No reminders\";\n      cb(str);\n    });\n  });\n}\nexports.containsObject = function(id, list) {\n    var i;\n    for (i = 0; i < list.length; i++) {\n        if (list[i].userid == id) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n\nexports.checkDate = function(testDate, parts, timezone){\n  var curDate = new Date();\n  testDate.setHours(testDate.getHours()-timezone);\n  var year = Number(20+parts.substr(6,2));\n  var month = Number(parts.substr(0,2))-1;\n  var date = Number(parts.substr(3,2));\n  var hour = Number(parts.substr(9,2));\n  var minute = Number(parts.substr(12,2));\n  if (curDate.getTime()>testDate.getTime()) return \"Invalid date! Please insert time in the future for your reminder\";\n  testDate.setHours(testDate.getHours()+timezone);\n  if (year!=testDate.getFullYear()||month!=testDate.getMonth()||date!=testDate.getDate()||hour!=testDate.getHours()||minute!=testDate.getMinutes()){\n  return \"Invalid date format! Please type again!\";\n  }\n  return \"Do you want add more information? (Y for yes, N for No)\";\n}\nexports.getLocation = function(location){\n  var places = [];\n  var url = \"https://maps.googleapis.com/maps/api/place/textsearch/json?query=\" + location + \"&key=\" + process.env.GOOGLE_API_KEY;\n  var res = sRequest('GET', url, {\n            timeout: 10000  \n        });\n  var data =  JSON.parse(res.getBody('utf8'));\n  \n  for (var i = 0; i < data.results.length; i++){\n    var place = {\"name\": data.results[i][\"formatted_address\"], \n                \"latitude\": data.results[i][\"geometry\"][\"location\"][\"lat\"],\n                \"longitude\": data.results[i][\"geometry\"][\"location\"][\"lng\"]\n                };\n    //var messageId = body.message_id;\n    places.push(place);\n    //console.log(\"Successfully sent generic message with place \"+ place.name + \" longitude = \" + place.longitude);\n  }  \n  return places;\n}"
      ]
    },
    "mtime": 1520898426000
  }
}